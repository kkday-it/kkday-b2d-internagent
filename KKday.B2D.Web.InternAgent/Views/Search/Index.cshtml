@using System.Globalization
@using Microsoft.AspNetCore.Mvc.Localization
@using KKday.B2D.Web.InternAgent.AppCode

@inject IViewLocalizer Localizer
@{
    Layout = "_KKdayLayout";
    ViewData["Title"] = Localizer["Search_Title"].Value;

    var locale = CultureInfo.CurrentCulture;
}
@section Styles {
    <link rel="stylesheet" href="~/css/kkday_search.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/kkday_search.css" />
    <link rel="stylesheet" href="~/lib/ion-rangeSlider/css/ion.rangeSlider.min.css" />
    <link rel="stylesheet" href="~/lib/jquery-daterangepicker/daterangepicker-bs3.css" />
    <link rel="stylesheet" href="~/lib/jquery-daterangepicker/daterangepicker.css" />

    <style type="text/css">
        .modal-backdrop {
            z-index: 1;
        }

        .input-group2 {
            position: relative;
            display: -webkit-box;
            display: -ms-flexbox;
            display: flex;
            -ms-flex-wrap: wrap;
            flex-wrap: wrap;
            -webkit-box-align: stretch;
            -ms-flex-align: stretch;
            align-items: stretch;
            width: 100%;
        }

            .input-group2 > .form-control2 {
                position: relative;
                -webkit-box-flex: 1;
                -ms-flex: 1 1 auto;
                flex: 1 1 auto;
                width: 1%;
                margin-bottom: 0;
            }

        .form-control2 {
            display: block;
            width: 100%;
            padding: .375rem .75rem;
            font-size: 1.16rem;
            line-height: 1.5;
            color: #495057;
            background-color: #fff;
            background-clip: padding-box;
            border: 1px solid #ced4da;
            border-radius: .25rem;
            transition: border-color .15s ease-in-out,box-shadow .15s ease-in-out;
        }

        .input-group-text2 {
            display: -webkit-box;
            display: -ms-flexbox;
            display: flex;
            -webkit-box-align: center;
            -ms-flex-align: center;
            align-items: center;
            padding: .375rem .75rem;
            margin-bottom: 0;
            font-size: 1.16rem;
            font-weight: 400;
            line-height: 1.5;
            color: #495057;
            text-align: center;
            white-space: nowrap;
            background-color: #e9ecef;
            border: 1px solid #ced4da;
            border-radius: .25rem;
        }

        .irs--flat {
            z-index: 10;
        }

            .irs--flat .irs-handle.state_hover > i:first-child, .irs--flat .irs-handle:hover > i:first-child {
                background-color: #fff;
            }

            .irs--flat .irs-handle > i:first-child {
                left: unset;
                width: 16px;
                background-color: #fff;
                border: 1px solid #ccc;
                border-radius: 8px;
            }

            .irs--flat .irs-from, .irs--flat .irs-to, .irs--flat .irs-single {
                background-color: #f2f2f2;
                color: #333;
                font-size: 13px;
            }

                .irs--flat .irs-from:before, .irs--flat .irs-to:before, .irs--flat .irs-single:before {
                    border-top-color: #f2f2f2;
                }

        .calendar-table {
            padding-bottom: 30px;
        }
        .pagination { display:flex !important; } 
        .popup-msg {
            display: block;
            position: fixed;
            padding: 10px;
            width: 320px;
            left: 50%;
            margin-left: -150px;
            height: 160px;
            top: 50%;
            margin-top: -100px;
            background: #FFF;
            z-index: 20;
            border: 1px solid #f2f2f2;
        }
    </style>
}
@section Scripts {
    <script src="~/lib/ion-rangeSlider/js/ion.rangeSlider.min.js"></script>
    <script src="~/js/moment-with-locales.js"></script>
    <script src="~/lib/jquery-daterangepicker/daterangepicker.js"></script>
    <script src="https://unpkg.com/mitt/dist/mitt.umd.js"></script>
}


<div id="App">
    <div class="container">
        <!-- Keywords -->
        <div class="row mt-4">
            <div class="col-md-12">
                <div class="input-group mb-3">
                    <input type="text" class="form-control" placeholder="Where do you want to go?" aria-label="Username" aria-describedby="basic-addon1"
                           v-model="search_key" v-on:keyup.enter="currentPage=1; Query();">
                </div>
            </div>
        </div>

        <!-- Search Result -->
        <div class="row">

            <div class="col-12 m-2 d-block d-sm-none sm-filter">

                <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#filterModal">
                    <i class="fa fa-filter" aria-hidden="true"></i> Filter
                </button>

                <!-- Modal -->
                <div class="modal fade" id="filterModal" tabindex="-1" role="dialog" aria-hidden="true">
                    <div class="modal-dialog" role="document">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h5 class="modal-title" style="font-size:18px; font-weight:bold;">Filter Condition</h5>
                                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                    <span aria-hidden="true">&times;</span>
                                </button>
                            </div>
                            <div class="modal-body"></div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                                @*<button type="button" class="btn btn-primary" onclick="UpdateFilter();"> OK </button>*@
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- filter -->
            <div class="col-3 d-none d-sm-block filter">
                <div class="filter-container">
                    <div class="filter-group">
                        <div class="filter-box" is-show-filter="A01-001">
                            <h4 class="collapsable collapsed">
                                @Localizer["Destination"]<i class="fa fa-caret-up pull-right"></i>
                            </h4>
                            <ul class="filter-list collapse">
                                @*<div class="chip-city-group">
                                        <template v-for="city in cities">
                                            <span class="chip chip-city">
                                                <a class="" v-html="city.name"></a>
                                            </span>
                                        </template>
                                    </div>*@
                            </ul>
                        </div>
                        <div class="checkbox-filter-box">
                            <h4>@Localizer["All_Categories"]</h4>
                            <template v-for="tag in facets.tag">
                                <div>
                                    <div :value="tag.id" class="drop-title" @@click.stop="tagToggle(tag)">
                                        <h5>
                                            {{ tag.name }}
                                            <div class="pull-right">
                                                <i :class="{'ri-arrow-down-s-line': !tag.open, 'ri-arrow-up-s-line': tag.open }"></i>
                                            </div>
                                            <div class="clearfix"></div>
                                        </h5>
                                    </div>
                                    <ul class="checkbox-dropdown-list" v-if="tag.open">
                                        <li class="checkbox" @@click.stop="subTagToggleAll(tag)">
                                            <i class="ri-lg" :class="{'ri-checkbox-blank-line': !subTagCheckAll(tag), 'ri-checkbox-fill': subTagCheckAll(tag)}"></i>
                                            <span class="checkbox-title">@Localizer["All"]</span>
                                        </li>
                                        <template v-for="sub_tag in tag.sub_tags">
                                            <li class="checkbox" v-if="sub_tag.count > 0" @@click.stop="subTagToggle(sub_tag)">
                                                <i class="ri-lg" :class="{'ri-checkbox-blank-line': !sub_tag.checked, 'ri-checkbox-fill': sub_tag.checked}"></i>
                                                <span :data-val="`cat|${sub_tag.id}`" class="checkbox-title" v-html="`${sub_tag.name} (${sub_tag.count})`"></span>
                                            </li>
                                        </template>
                                    </ul>
                                </div>
                            </template>
                        </div>
                        <div class="filter-box">
                            <h4 v-cloak>@Localizer["Price_Range"] ({{currency}})</h4>
                            <div>
                                <input v-cloak type="text" id="js-range-slider" name="range" data-min="{{stats.price.min}}"
                                       data-max="{{stats.price.max}}" data-from="{{stats.price.min}}"
                                       data-to="{{stats.price.max}}" @@change="rangeChanged" />
                            </div>
                        </div>

                        <div class="filter-box">
                            <h4 class="collapsable" @@click.stop="show_duration=!show_duration">
                                @Localizer["Journey_Time"]
                                <i class="fa fa-caret-up pull-right" v-if="show_duration"></i>
                                <i class="fa fa-caret-down pull-right" v-if="!show_duration"></i>
                            </h4>
                            <ul class="filter-list collapse in" v-if="show_duration">
                                <li class="checkbox" @@click.stop="durations[0].checked=!durations[0].checked; Query();">
                                    <i class="ri-lg" :class="{'ri-checkbox-blank-line': !durations[0].checked, 'ri-checkbox-fill': durations[0].checked }"></i>
                                    <span data-val="time|8h" class="checkbox-title">@Localizer["Journey_Time_0h_8h"]</span>
                                </li>
                                <li class="checkbox" @@click.stop="durations[1].checked=!durations[1].checked; Query();">
                                    <i class="ri-lg" :class="{'ri-checkbox-blank-line': !durations[1].checked, 'ri-checkbox-fill': durations[1].checked }"></i>
                                    <span data-val="time|1d" class="checkbox-title">@Localizer["Journey_Time_8h_1d"]</span>
                                </li>
                                <li class="checkbox" @@click.stop="durations[2].checked=!durations[2].checked; Query();">
                                    <i class="ri-lg" :class="{'ri-checkbox-blank-line': !durations[2].checked, 'ri-checkbox-fill': durations[2].checked }"></i>
                                    <span data-val="time|2d" class="checkbox-title">@Localizer["Journey_Time_1d_2d"]</span>
                                </li>
                                <li class="checkbox" @@click.stop="durations[3].checked=!durations[3].checked; Query();">
                                    <i class="ri-lg" :class="{'ri-checkbox-blank-line': !durations[3].checked, 'ri-checkbox-fill': durations[3].checked }"></i>
                                    <span data-val="time|*" class="checkbox-title">@Localizer["Journey_Time_2d_more"]</span>
                                </li>
                            </ul>
                        </div>
                    </div>
                </div>
            </div>

            <!-- product-list -->
            <div class="col-md-9 product-list">
                <div class="board product-result mb-0 result-board">
                    <div class="d-flex flex-row">
                        <h4>
                            <span class="text-primary">
                                {{ totalRows }}
                            </span>
                            @Localizer["ExperienceFound"]
                        </h4>
                        <tags-section></tags-section>
                        <div class="ms-auto">
                            <b-form-select v-model="sorting" :options="sort_options" @@change="sortChanged" class="form-control"></b-form-select>
                        </div>
                    </div>
                </div>
                <template v-for="pd in prods">
                    <div class="product-listview search-info">
                        <a :id="`product-card-${pd.prd_no}`" :href="`${_root_path}Product/${pd.prod_no}`" target="_blank" rel="noopener">
                            <div class="row">
                                <div class="col-sm-5 col-lg-4">
                                    <div class="img-bg" lazy="loaded" :style="{ backgroundImage: 'url(' + pd.prod_img_url + ')' }"></div>
                                </div>
                                <div class="col-sm-7 col-lg-8">
                                    <div class="product-detail">
                                        <div class="card-point">
                                            <span class="label label-warning mr-5" v-if="pd.instant_booking"> @Localizer["Instant_Confirm"] </span>
                                        </div>
                                        <h3 v-html="pd.prod_name"></h3>
                                        <p class="description" v-html="pd.introduction"></p>
                                        <div class="product-place">
                                            <i class="fa fa-map-marker"></i>

                                        </div>
                                        <div class="product-footer">
                                            <div class="product-star"></div>
                                            <span class="divider"></span>
                                            <div class="product-pricing">
                                                <div class="origin-price"> @Localizer["Original_Price"] {{ pd.b2c_price }}</div>
                                                <span v-html="currency"></span> <h4 class="text-primary" v-html="pd.b2b_price"></h4>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </a>
                    </div>
                </template>
                <div class="product-listview search-info" v-if="prods.length < 1">
                    <div class="row">
                        <div class="col-12 p-5">
                            @Localizer["No_Matched_Product"]
                        </div>
                    </div>
                </div>

                <!-- Pagination -->
                <div class="overflow-auto" v-if="prods.length > 0">
                    <b-pagination v-model="currentPage" @@change="Query()"
                                  :total-rows="totalRows"
                                  :per-page="perPage"
                                  :limit="limit"
                                  align="center" size="lg"></b-pagination>
                    <p class="mt-3" v-html="`@Localizer["Current_Page"]: ${currentPage}`"></p>
                </div>

            </div>
        </div>

    </div>

    <!-- Loading Popup -->
    <div class="popup-msg" id="popup1" v-show="isLoading">
        <div class="row align-items-center h-100">
            <div class="col-6 mx-auto">
                <img id="loading" src="@Url.Content("~/images/loading-spin.gif")" style="width: 32px;" />
                @Localizer["Search_Loading"]
            </div>
        </div>
    </div>
</div>


<script type="text/javascript">
    const emitter = mitt();

    $(function () { 
        $('#js-range-slider').ionRangeSlider({
            type: "double",
            grid: false,
            prettify_separator: ",",
            min: 0,
            max: 0
        });
    })

    let app = new Vue({
        el: '#App',
        data() {
            return {
                load_once: true,
                currentPage: 1,
                totalRows: 0,
                perPage: 25,
                limit: 8,
                isLoading: false, 
                locale: '@locale',
                price_range: { min: null, max: null },
                currency: '@Localizer[Website.Instance.Currency]',
                sliderVal: null,
                show: true,
                facets: {},
                stats: {},
                prods: [],
                show_duration: true,
                durations: [
                    { time: "0,8", checked: false }, { time: "8,24", checked: false },
                    { time: "24,48", checked: false }, { time: "72,*", checked: false }
                ],
                search_key: '',
                sel_sub_tags: [],
                sorting: null,
                sort_options: [
                    { value: null, text: "KKday Recommended" },
                    { value: "PDESC", text: "Price - High to Low" },
                    { value: "PASC", text: "Price - Low to High" },
                    { value: "HDESC", text: "Popularity - High to Low" },
                    { value: "SDESC", text: "Average Rating Star - High to Low)" }
                ]
            }
        },
        watch: {
            sel_sub_tags: {
                handler: function () {
                    this.currentPage = 1;
                    this.Query();
                }
            }
        },
        created: function () {
            var search_key = location.search.split('key=')[1];
            if (search_key) {
                this.search_key = decodeURIComponent(search_key);
                history.pushState(null, null, location.href.split('?')[0]);
            }

            this.Query();
        },
        methods: {
            Query() {
                if (this.isLoading) return;

                this.isLoading = true;
                setTimeout(() => {
                    this.Fetch();
                }, 200)
            },
            Fetch() { 
                let vm = this;
                let req = {
                    key: this.search_key, page: this.currentPage, size: this.perPage,
                    durations: this.durations.filter(d => d.checked).map(d => d.time)
                };

                if (this.sorting) req.sort = this.sorting;
                if (this.sel_sub_tags.length) req.cat_keys = this.sel_sub_tags.map(st => st.id);

                if (!this.load_once) {
                    var slider = $("#js-range-slider").data("ionRangeSlider");
                    if (slider.result.from && slider.result.to) {
                        req.price_from = parseFloat(slider.result.from);
                        req.price_to = parseFloat(slider.result.to);
                    }
                }

                console.log(`Fetch Req => ${JSON.stringify(req)}`);
                let uri = `${_root_path}Search/Query`;
                fetch(uri, {
                        method: 'POST',
                        headers: {
                            'Accept': 'application/json',
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify(req)
                    })
                    .then(response => {
                        // console.log(response.status);
                        return response.json()
                    })
                    .then(result => {
                        console.log(`${JSON.stringify(result)}`);
                        if (result.data) {
                            this.totalRows = result.data.metadata.total_count;
                            this.prods = result.data.prods;
                            console.log(`Fetch => totalRows:${this.totalRows}, product.len:${this.prods.length}`)

                            if (this.load_once) {
                                result.data.facets.tag.forEach(t => {
                                    t.open = false;
                                    t.select_all = false;
                                    t.sub_tags.forEach(st => { st.checked = false });
                                });
                                this.facets = result.data.facets;
                                this.stats = result.data.stats;
                                 
                                let range = $("#js-range-slider").data("ionRangeSlider");
                                if (range) {
                                    range.update({
                                        min: this.stats.price.min, max: this.stats.price.max,
                                        from: this.stats.price.min, to: this.stats.price.max
                                    }); 
                                }

                                $("#js-range-slider").on('change', function () {
                                    vm.rangeChanged(this.value);
                                });

                                this.load_once = false;
                            }
                        }
                        else {
                            this.facets = this.stats = {};
                            this.prods = [];
                            this.totalRows = 0;
                            let range = $("#js-range-slider").data("ionRangeSlider");
                            if (range) {
                                range.update({ min: 0, max: 0});
                            }
                            this.load_once = true;
                        }

                        this.isLoading = false;
                    })
                    .catch(error => { console.error('Unable to search.', error); this.isLoading = false });

            },
            tagToggle(tag) {
                // console.log(`Tag Toggle, tag=>${JSON.stringify(tag)}`)
                tag.open = !tag.open;
            },
            subTagCheckAll(tag) {
                tag.select_all = tag.sub_tags.filter(t => t.checked === false).length < 1;
                return tag.select_all;
            },
            subTagToggleAll(tag) {
                if (tag.select_all) {
                    tag.sub_tags.forEach(t => t.checked = false);
                    this.sel_sub_tags = this.sel_sub_tags.filter(t => !tag.sub_tags.some(s => s.id === t.id));
                }
                else {
                    tag.sub_tags.forEach(st => {
                        st.checked = true;
                        this.sel_sub_tags.push(st);
                    });
                    this.sel_sub_tags = [...new Set(this.sel_sub_tags)];
                }
            },
            subTagToggle(sub_tag) {
                if (sub_tag.checked) {
                    sub_tag.checked = false;
                    this.sel_sub_tags = this.sel_sub_tags.filter(t => t.id != sub_tag.id);
                }
                else {
                    sub_tag.checked = true;
                    this.sel_sub_tags.push(sub_tag);
                }
            },
            unselectTag(id) {
                let sel_sub_tags = this.facets.tag.map(t => t.sub_tags.filter(st => st.id === id && st.checked).map(st => st)).flat();
                if (sel_sub_tags.length) {
                    this.sel_sub_tags = this.sel_sub_tags.filter(st => st.id != id);

                    let sub_tags = this.facets.tag.map(t => t.sub_tags.filter(st => st.id === id).map(st => st)).flat();
                    sub_tags.forEach(st => st.checked = false);
                }
            },
            rangeChanged(val) {
                this.currentPage = 1;
                this.Query();
            },
            resetAllTags() {
                let sub_tags = this.facets.tag.map(t => t.sub_tags.filter(st => st.checked).map(st => st)).flat();
                sub_tags.forEach(st => st.checked = false);
                this.sel_sub_tags = [];
            },
            sortChanged() {
                this.currentPage = 1;
                this.Query();
            }
        },
        mounted: function () {
            emitter.on('reset-all-tags', (data) => {
                this.resetAllTags();
            });

            emitter.on('unselect-tag', (data) => {
                this.unselectTag(data);
            });
        }
    });

     Vue.component('tags-section', {
        data: function () {
             return {

            }
        },
        template: `
    <span v-if="this.$parent.sel_sub_tags.length">
        <span class="chip" v-for="tag in this.$parent.sel_sub_tags"><a>{{tag.name}}</a> <span class="delete-chip" @@click.stop="unselectTag(tag.id)">✕</span></span>
        <span class="chip clearall"><a href="javascript:;" @@click="resetAllTags()">清除所有</a></span>
    </span>`,
         created: function () {

         },
         methods: {
             unselectTag(id) {
                 emitter.emit('unselect-tag', id);
             },
             resetAllTags() {
                 emitter.emit('reset-all-tags');
             }
         }
    });
</script>
