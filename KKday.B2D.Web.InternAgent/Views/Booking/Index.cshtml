@using System.Globalization
@using Microsoft.AspNetCore.Mvc.Localization

@inject IViewLocalizer Localizer
@{
    Layout = "_KKdayLayout";

    var prodOid = ViewData["prodOid"];
    var locale = CultureInfo.CurrentCulture;
}
@section Styles {
    <link rel="stylesheet" href="https://unpkg.com/vue-select@latest/dist/vue-select.css">
    <link rel="stylesheet" href="~/lib/bootstrap-datepicker/dist/css/bootstrap-datepicker.css">

    <style type="text/css">
        /* revert to default --- start */
        .input-group {
            position: relative;
            display: -webkit-box;
            display: -ms-flexbox;
            display: flex;
            -ms-flex-wrap: wrap;
            flex-wrap: wrap;
            -webkit-box-align: stretch;
            -ms-flex-align: stretch;
            align-items: stretch;
            width: 100%;
        }

            .input-group > .custom-file, .input-group > .custom-select, .input-group > .form-control {
                position: relative;
                -webkit-box-flex: 1;
                -ms-flex: 1 1 auto;
                flex: 1 1 auto;
                width: 1%;
                margin-bottom: 0;
            }

        .input-group-append, .input-group-prepend {
            display: -webkit-box;
            display: -ms-flexbox;
            display: flex;
        }

        /* revert to default --- end */

        .list-item-content-line {
            position: relative;
            height: 1px;
            margin: 5px 0;
            background-color: #3e3f40;
        }

        .list-item-content {
            background-color: #fbfbef;
        }

        .list-item-content-line:after {
            position: absolute;
            right: 0;
            content: '';
            top: -4px;
            width: 0;
            height: 0;
            border-style: solid;
            border-width: 4px 0 4.4px 8px;
            border-color: transparent transparent transparent #3e3f40;
        }

        .board-title[data-toggle=collapse] {
            padding-right: 30px;
        }

        .traveler-con .sub-title {
            font-size: 16px;
            font-weight: 700;
            padding-top: 10px;
            margin-bottom: 20px;
        }
 
        .country .vs__dropdown-toggle {
            font-size: 1.4rem;
            height: 45px;
        }

        div:not(.datepicker) .dropdown-menu {
            max-height: 400px;
            overflow-y: auto;
        }

        .tel-country .vs__dropdown-toggle {
            border-top-right-radius: 0;
            border-bottom-right-radius: 0;
            width: 150px;
            height: 45px;
        }
        .vs__dropdown-toggle .vs__search {
            font-size: 1.4rem;
        }
        .w-40 {
            width: 40%;
        }

        .cus-route-item {
            border: 1px solid #d5d6db;
            border-radius: 8px;
            padding: 6px 12px;
            margin-right: 5px;
        }

        .tkt-qty {
            flex-basis: 90px;
            text-align: end;
        }
    </style>
}
@section Scripts {
    <script src="https://unpkg.com/vue-select@latest"></script>
    <script src="~/lib/bootstrap-datepicker/dist/js/bootstrap-datepicker.js"></script>
    <script src="~/lib/bootstrap-datepicker/dist/locales/bootstrap-datepicker.@(locale).min.js"></script>
}

<h3>@Localizer["boooking_title"]</h3>
<div id="App" class="booking-wrap mb-5" data-pid="@prodOid">
    <div class="container">
        <div class="con">

            <div class="row">
                <!-- Partner Order Number -->
                <div class="col-md-4 col-xs-12">
                    <div class="form-group must">
                        <label>@Localizer["booking_step1_parner_order_no"]</label>
                        <input class="form-control" id="partnerOrderNo" name="partnerOrderNo" maxlength="30" placeholder="" value="" v-model="booking.partner_order_no">
                    </div>
                </div>
            </div>

            <div class="row">
                <!-- Buyer First Name -->
                <div class="col-md-4 col-sm-6 col-xs-12">
                    <div class="form-group must">
                        <label>@Localizer["booking_step1_buyer_first_name"]<span class="text-danger">*</span></label>
                        <input type="text" class="form-control" id="txtLocalFname" name="txtLocalFname" placeholder="" v-model="booking.buyer_first_name" />
                    </div>
                </div>
                <!-- Buyer Last Name -->
                <div class="col-md-4 col-sm-6 col-xs-12">
                    <div class="form-group must">
                        <label>@Localizer["booking_step1_buyer_last_name"]<span class="text-danger">*</span></label>
                        <input type="text" class="form-control" id="txtLocalLname" name="txtLocalLname" placeholder="" v-model="booking.buyer_last_name" />
                    </div>
                </div>
                <!-- Nationality -->
                <div class="col-md-4 col-sm-6 col-xs-12">
                    <div class="form-group must">
                        <label>@Localizer["common_nationality"]<span class="text-danger">*</span></label>
                        <v-select :options="country_areas" :reduce="country => country.country_code" label="country_code" class="country"
                                  :get-option-label="getCountryLabel" v-model="booking.buyer_country" placeholder="@Localizer["common_select_set"]">
                            <template #option="option">
                                <span>{{ option.country_name }} {{ option.country_code }}</span>
                            </template>
                        </v-select>
                        @*<select class="form-select country select2" id="buyer-country" v-model="booking.buyer_country">
                                <option value="">--select--</option>
                                <template v-for="option in country_areas">
                                    <option :value="option.country_code" v-html="`${option.country_name} ${option.country_code}`"></option>
                                </template>
                            </select>*@
                    </div>
                </div>
                <!-- Tel Country Code & Tel Number -->
                <div class="col-md-4 col-sm-6 col-xs-12">
                    <div class="form-group must">
                        <label>@Localizer["member_basic_phoneNumber"]<span class="text-danger">*</span></label>
                        <div class="input-group">
                            <v-select :options="country_areas" class="tel-country" :reduce="country => country.tel_area" label="tel_area"
                                      :get-option-label="getTelAreaLabel" v-model="booking.buyer_tel_country_code" placeholder="@Localizer["common_select_set"]">
                                <template #option="option">
                                    <span>+{{option.tel_area}} {{ option.country_name }} </span>
                                </template>
                            </v-select>
                            @*<select class="form-select select2" v-model="booking.buyer_tel_country_code">
                                    <option value="" selected>--select--</option>
                                    <template v-for="option in country_areas">
                                        <option :value="option.tel_area" v-html="`+${option.tel_area} ${option.country_name}`"></option>
                                    </template>
                                </select>*@
                            <input type="text" class="form-control" id="txtContactTel" name="txtContactTel" placeholder="" v-model="booking.buyer_tel_number">
                        </div>
                    </div>
                </div>
                <!-- Email -->
                <div class="col-md-4 col-sm-6 col-xs-12">
                    <div class="form-group must">
                        <label>@Localizer["common_email"] <span class="text-danger">*</span></label>
                        <input type="email" class="form-control" id="txtEmail" name="txtEmail" placeholder="" v-model="booking.buyer_Email">
                        @*<label style="color:blue">email</label>*@
                    </div>
                </div>
            </div>

        </div>

        <div class="con">
            <!--Traveler -->
            <template v-for="(pax, idx) in booking.custom.filter(c=>c.cus_type === 'cus_01' || c.cus_type === 'cus_02')">
                <div class="traveler-con">
                    <div class="d-flex">
                        <h4 class="flex-grow-1">
                            @Localizer["common_cus"] <span v-html="idx+1"></span>
                        </h4>
                        <span class="align-self-end" style="font-size: 2.6rem;" onclick="TogglePaxPanel(this)"><i class="fa fa-angle-up ml-auto" aria-hidden="true"></i></span>
                    </div>
                    <div class="board active pax-item"> 
                        <div class="row">
                            <div class="col-md-4 col-sm-6 col-xs-12" v-if="checkBookingField('custom.nationality', 'cus_01,cus_02')">
                                <!-- Nationality -->
                                <div class="form-group">
                                    <label>@Localizer["common_nationality"]<span class="text-danger">*</span></label>
                                    <v-select :options="country_areas" :reduce="country => country.country_code" label="country_code" class="country"
                                              :get-option-label="getCountryLabel" v-model="pax.nationality" placeholder="@Localizer["common_select_set"]">
                                        <template #option="option">
                                            <span>{{ option.country_name }} {{ option.country_code }}</span>
                                        </template>
                                    </v-select>
                                    @*<select class="form-control country" id="psg-country" v-model="pax.nationality">
                                        <option value="">--select--</option>
                                        <template v-for="option in getBookingFieldReference('custom.nationality')">
                                            <option :value="option.code" v-html="`${option.name}`"></option>
                                        </template>
                                    </select>*@
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <!-- Native First Name -->
                            <div class="col-md-4 col-sm-6 col-xs-12" v-if="checkBookingField('custom.native_first_name', 'cus_01,cus_02')">
                                <div class="form-group">
                                    <label><span v-html="`@Localizer["booking_step1_cust_data_local_firstname"]`"></span><span class="text-danger">*</span></label>
                                    <input placeholder="@Localizer["KHSR_Booking_FirstName_PlaceHolder"]" name="`localFirstName-${idx}`" type="text" maxlength="50" class="form-control"
                                           v-model="pax.native_first_name" required>
                                </div>
                            </div>
                            <!-- Native Last Name -->
                            <div class="col-md-4 col-sm-6 col-xs-12" v-if="checkBookingField('custom.native_last_name', 'cus_01,cus_02')">
                                <div class="form-group">
                                    <label><span v-html="`@Localizer["booking_step1_cust_data_local_lastname"]`"></span><span class="text-danger">*</span></label>
                                    <input placeholder="@Localizer["KHSR_Booking_LastName_PlaceHolder"]" name="`localLastName-${idx}`" type="text" maxlength="50" class="form-control"
                                           v-model="pax.native_last_name" required />
                                </div>
                            </div>
                            <!-- English First Name (Passport) -->
                            <div class="col-md-4 col-sm-6 col-xs-12" v-if="checkBookingField('custom.english_first_name', 'cus_01, cus_02')">
                                <div class="form-group">
                                    <label>@Localizer["booking_step1_cust_data_passport_english_firstname"]<span class="text-danger">*</span></label>
                                    <input placeholder="@Localizer["KHSR_Booking_FirstName_PlaceHolder"]" name="`enFirstName-${idx}`" type="text" maxlength="50" class="form-control"
                                           v-model="pax.english_first_name" required />
                                </div>
                            </div>
                            <!-- English Last Name (Passport) -->
                            <div class="col-md-4 col-sm-6 col-xs-12" v-if="checkBookingField('custom.english_last_name', 'cus_01, cus_02')">
                                <label>@Localizer["booking_step1_cust_data_passport_english_lastname"]<span class="text-danger">*</span></label>
                                <input placeholder="@Localizer["KHSR_Booking_LastName_PlaceHolder"]" name="`enlLastName-${idx}`" type="text" maxlength="50" class="form-control"
                                       v-model="pax.english_last_name" required />
                            </div>
                        </div>
                        <div class="row">
                            <!-- Birth -->
                            <div class="col-md-4 col-sm-6 col-xs-12" v-if="checkBookingField('custom.birth', 'cus_01,cus_02')">
                                <div class="form-group">
                                    <label>@Localizer["component_form_date_of_birth_title"]<span class="text-danger">*</span></label>
                                    <div class="input-group mb-3">
                                        <datepicker v-model="pax.birth" placeholder="@Localizer["component_form_title_placeholder"]"></datepicker>
                                        @*<input type="text" name="`pax-birth-${idx}`" class="form-control"
                                               placeholder="@Localizer["component_form_title_placeholder"]" v-model="pax.birth" required />*@
                                        <div class="input-group-append">
                                            <span class="input-group-text bg-white"><i class="icon-calendar icons"></i></span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <!-- Passport No -->
                            <div class="col-md-4 col-sm-6 col-xs-12" v-if="checkBookingField('custom.passport_no', 'cus_01,cus_02')">
                                <div class="form-group">
                                    <label>@Localizer["component_form_passport_number_title"]<span class="text-danger">*</span></label>
                                    <input placeholder="@Localizer["component_form_passport_number_placeholder"]" name="`passport-${idx}`" type="text" class="form-control"
                                           oninput="this.value=this.value.replace(/\s/g, '')" v-model="pax.passport_no" required />
                                </div>
                            </div>
                            <!-- Passport Expired Date -->
                            <div class="col-md-4 col-sm-6 col-xs-12" v-if="checkBookingField('custom.passport_expdate', 'cus_01,cus_02')">
                                <div class="form-group">
                                    <label>@Localizer["component_form_passport_expire_date_title"]<span class="text-danger">*</span></label>
                                    <div class="input-group mb-3">
                                        <input type="text" name="`passport_expdate_${idx}`" placeholder=""
                                               readonly="readonly" class="form-control" v-model="pax.passport_expdate" required />
                                        <div class="input-group-append">
                                            <span class="input-group-text bg-white"><i class="icon-calendar icons"></i></span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <!-- Taiwan Identity Number -->
                            <div class="col-md-4 col-sm-6 col-xs-12" v-if="checkBookingField('custom.id_no', 'cus_01,cus_02')" v-show="checkTwResident(pax)">
                                <div class="form-group">
                                    <label>@Localizer["order_show_cust_data_tw_identity_number"]<span class="text-danger">*</span></label>
                                    <input placeholder="@Localizer["component_form_tw_identity_number_placeholder"]" name="`twIdentity-${idx}`" type="text" class="form-control"
                                           v-model="pax.id_no" oninput="this.value=this.value.replace(/\s/g, '')" required />
                                </div>
                            </div>
                            <!-- MTP Number (Taiwanese Only) -->
                            <div class="col-md-4 col-sm-6 col-xs-12" v-if="checkBookingField('custom.mtp_no', 'cus_01,cus_02')" v-show="checkTwResident(pax)">
                                <div class="form-group">
                                    <label>@Localizer["order_show_cust_data_mtp_number"]<span class="text-danger">*</span></label>
                                    <input placeholder="@Localizer["component_form_mtp_number_placeholder"]" name="`mtp_no-${idx}`" type="text" v-model="pax.mtp_no"
                                           oninput="this.value=this.value.replace(/\s/g, '')" class="form-control" required />
                                </div>
                            </div>
                            <!-- Gender -->
                            <div class="col-md-4 col-sm-6 col-xs-12" v-if="checkBookingField('custom.gender', 'cus_01,cus_02')">
                                <div class="form-group">
                                    <label>@Localizer["booking_step1_cus_cusGender"]<span class="text-danger">*</span></label>
                                    <select name="`pax-gender-${idx}`" class="form-control" v-model="pax.gender" required>
                                        <option value="">@Localizer["component_form_gender_placeholder"]</option>
                                        <template v-for="gender in getBookingFieldReference('custom.gender')">
                                            <option :value="gender.id" v-html="gender.name"></option>
                                        </template>
                                    </select>
                                </div>
                            </div>
                            <!-- Tel Country Code & Phone Number -->
                            <div class="col-md-4 col-sm-6 col-xs-12" v-if="checkBookingField('custom.tel_number', 'cus_01,cus_02')">
                                <div class="form-group">
                                    <label>@Localizer["component_form_contact_tel_title"]<span class="text-danger">*</span></label>
                                    <div class="input-group buyer-tel-country">

                                        <select name="`pax-gender-${idx}`" class="form-control" v-model="pax.tel_country_code" required>
                                            <option value="">@Localizer["booking_step1_contact_country_placeholder"]</option>
                                            <template v-for="tel in getBookingFieldReference('custom.telCountryCode')">
                                                <option :value="tel.code" v-html="`${tel.info} ${tel.code}`"></option>
                                            </template>
                                        </select>
                                        <input placeholder="@Localizer["component_form_contact_tel_placeholder"]" type="tel" class="form-control form-phone" name="tel_number"
                                               v-model="pax.tel_number" autocomplete="off" required />
                                    </div>
                                </div>
                            </div>
                            <!-- Height -->
                            <div class="col-md-4 col-sm-6 col-xs-12 form-group" v-if="checkBookingField('custom.height', 'cus_01,cus_02')">
                                <label>@Localizer["booking_step1_cust_data_height"]<span class="text-danger">*</span></label>
                                <input placeholder="@Localizer["component_form_title_placeholder"]" autocomplete="on" type="number" name="height0-0" min="0" class="form-control" v-model="pax.height" required />
                            </div>
                            <!-- Height Unit -->
                            <div class="col-md-4 col-sm-6 col-xs-12 form-group" v-show="checkBookingField('custom.height_unit', 'cus_01,cus_02')">
                                <label>@Localizer["booking_step1_cust_data_height"]@Localizer["booking_step1_cust_data_unit"]<span class="text-danger">*</span></label>
                                <select name="heightUnit0-0" class="form-control" v-model="pax.height_unit" required>
                                    <option disabled="disabled" value="">@Localizer["booking_step1_cust_data_unit"]</option>
                                    <template v-for="height in getBookingFieldReference('custom.height_unit')">
                                        <option :value="height.id" v-html="`${height.name}`"></option>
                                    </template>
                                </select>
                            </div>
                            <!--  Wegiht -->
                            <div class="col-md-4 col-sm-6 col-xs-12 form-group" v-if="checkBookingField('custom.weight', 'cus_01,cus_02')">
                                <label>@Localizer["booking_step1_cust_data_weight"]<span class="text-danger">*</span></label>
                                <input placeholder="@Localizer["component_form_title_placeholder"]" autocomplete="on" type="number" name="weight0-0" min="0" class="form-control" v-model="pax.weight" required>
                            </div>
                            <!-- Weight Unit -->
                            <div class="col-md-4 col-sm-6 col-xs-12 form-group" v-if="checkBookingField('custom.weight_unit', 'cus_01,cus_02')">
                                <label>@Localizer["booking_step1_cust_data_weight"]@Localizer["booking_step1_cust_data_unit"]<span class="text-danger">*</span></label>
                                <select name="weightUnit0-0" class="form-control" v-model="pax.weight_unit" required>
                                    <option disabled="disabled" value="">@Localizer["booking_step1_cust_data_unit"]</option>
                                    <template v-for="weight in getBookingFieldReference('custom.weight_unit')">
                                        <option :value="weight.id" v-html="`${weight.name}`"></option>
                                    </template>
                                </select>
                            </div>
                            <!-- Shoe Size -->
                            <div class="col-md-4 col-sm-6 col-xs-12 form-group" v-if="checkBookingField('custom.shoe_type', 'cus_01,cus_02')">
                                <label>@Localizer["booking_step1_cust_data_shoe_size"]<span class="text-danger">*</span></label>
                                <select :id="`shoeSizeType_${idx}`" class="form-control" name="shoeSizeType0-0" @@change="refreshShoeSize(idx)" v-model="pax.shoe_type" required>
                                    <option value="">@Localizer["component_form_title_placeholder"]</option>
                                    <template v-for="temp in getBookingFieldReference('custom.shoe_type')">
                                        <option :value="temp.id" v-html="`${temp.name}`"></option>
                                    </template>
                                </select>
                                <div class="tip kk-u-text-dark kk-u-text-body-sm">
                                    @Localizer["booking_step1_cust_data_shoe_size_tip"]
                                </div>
                            </div>
                            <!-- Shoe Unit -->
                            <div class="col-md-2 col-sm-6 col-xs-12 form-group" v-if="checkBookingField('custom.shoe_unit', 'cus_01,cus_02')">
                                <label>@Localizer["booking_step1_cust_data_shoe_size"]<span class="text-danger">*</span></label>
                                <select :id="`shoeSizeUnit_${idx}`" class="form-control" name="shoeSizeUnit0-0" @@change="refreshShoeSize(idx)" v-model="pax.shoe_unit" required>
                                    <option value="">@Localizer["booking_step1_cust_data_shoe_size_placeholder"]</option>
                                    <template v-for="temp in getBookingFieldReference('custom.shoe_unit')">
                                        <option :value="temp.id" v-html="`${temp.name}`"></option>
                                    </template>
                                </select>
                            </div>
                            <!-- Shoe Size -->
                            <div class="col-md-2 col-sm-6 col-xs-12 form-group" v-if="checkBookingField('custom.shoe', 'cus_01,cus_02')">
                                <label>@Localizer["booking_step1_cust_data_shoe_size"]<span class="text-danger">*</span></label>
                                <select :id="`shoeSizeValue_${idx}`" class="form-control" name="shoeSizeValue0-0" v-model="pax.shoe" required>
                                    <option value="">@Localizer["component_form_title_placeholder"]</option>
                                </select>
                            </div>
                            <!-- Glasses Degree -->
                            <div class="col-md-4 col-sm-6 col-xs-12 form-group" v-if="checkBookingField('custom.glass_degree', 'cus_01,cus_02')">
                                <label>@Localizer["booking_step1_cust_data_glass_diopter"] <span class="text-danger">*</span></label>
                                <select name="glassDiopter0-0" class="form-control" v-model="pax.glass_degree" required>
                                    <option disabled="disabled" value="">@Localizer["booking_step1_cust_data_glass_diopter_placeholder"]</option>
                                    <option value="0">@Localizer["booking_step1_cust_data_do_not_need"]</option>
                                    <template v-for="temp in getBookingFieldReference('custom.glass_degree')">
                                        <option :value="temp.code" v-html="`${temp.value}`"></option>
                                    </template>
                                </select>
                            </div>
                            <!-- Meal Selection -->
                            <div class="col-md-4 col-sm-6 col-xs-12 form-group" v-if="checkBookingField('custom.meal', 'cus_01,cus_02')">
                                <label>@Localizer["booking_step1_cust_data_meal"]<span class="text-danger">*</span></label>
                                <select class="form-control" name="meal0-0" v-model="pax.meal" required>
                                    <option disabled="disabled" value="">@Localizer["booking_step1_cust_data_meal_placeholder"]</option>
                                    <template v-for="temp in getBookingFieldReference('custom.meal')">
                                        <option :value="temp.meal_type" v-html="temp.meal_type_name" v-if="temp.is_provided==true"></option>
                                    </template>
                                </select>
                            </div>
                        </div> <!-- row -->
                    </div>
                </div>
            </template>

            <!-- Guide Language -->
            <template v-if="bookingField?.guide_lang && bookingField?.guide_lang?.is_require === 'True'">
                <div class="traveler-con">
                    <div class="sub-title">@Localizer["common_guide_lang"]</div>
                    <div class="row">
                        <div class="col-md-6 col-sm-6 col-xs-12">
                            <div class="form-group">
                                <label>@Localizer["booking_step1_product_guide_lang"]<span class="text-danger">*</span></label>
                                <select class="form-control" name="booking-guid-lang" v-model="booking.guide_lang" required>
                                    <option value="" disabled>@Localizer["component_form_title_placeholder"]</option>
                                    <template v-for="lang in bookingField.guide_lang?.list_option">
                                        <option :value="lang" v-html="lang"></option>
                                    </template>
                                </select>
                            </div>
                        </div>
                    </div>
                </div>
            </template>

            <!-- Flight: Departure Info -->
            <template v-if="bookingField?.traffics?.find(t => t.traffic_type?.traffic_type_value == 'flight')">
                <div class="traveler-con">
                    <div class="sub-title">
                        @Localizer["booking_step1_flight_info_departure_info"]?.Value.Replace("%s", string.Empty).Replace(" ", string.Empty)
                    </div>
                    <div class="row">
                        <div class="col-md-6 col-sm-6 col-xs-12" v-if="checkBookingFieldforFlight('departure_flightType')">
                            <!-- Flight Type -->
                            <div class="form-group">
                                <label>@Localizer["booking_step1_flight_info_flight_type"]<span class="text-danger">*</span></label>
                                <select id="booking-flight-departure-type" name="departureFlightType0" class="form-control"
                                        v-model="booking?.traffics?.find(t=> t.traffic_type=='flight').departure_flightType" required>
                                    <option disabled="disabled" value="">@Localizer["booking_step1_flight_info_flight_type_placeholder"]</option>
                                    <template v-for="temp in getBookingFieldReferenceforFlight('departure_flightType')">
                                        <option :value="temp.id" v-html="temp.name"></option>
                                    </template>
                                </select>
                            </div>
                        </div>
                        <div class="col-md-6 col-sm-6 col-xs-12" v-if="checkBookingFieldforFlight('departure_airport')">
                            <!-- Airport -->
                            <div class="form-group">
                                <label>@Localizer["booking_step1_flight_info_departure_airport"]<span class="text-danger">*</span></label>
                                <select id="booking-flight-departure-airport" class="form-control" name="departureAirport0"
                                        v-model="booking?.traffic?.find(t=> t.traffic_type=='flight').departure_airport" required>
                                    <option disabled="disabled" value="">@Localizer["booking_step1_flight_info_departure_airport_placeholder"]</option>
                                    <template v-for="temp in getBookingFieldReferenceforFlight('departure_airport')">
                                        <option :value="temp.code" v-html="temp.name"></option>
                                    </template>
                                </select>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6 col-sm-6 col-xs-12" v-if="checkBookingFieldforFlight('departure_terminalNo')">
                            <!-- Terminal No -->
                            <div class="form-group">
                                <label>@Localizer["order_show_flight_info_terminal_no"]<span class="text-danger">*</span></label>
                                <input placeholder="@Localizer["booking_step1_flight_info_terminal_no_placeholder"]" autocomplete="on" type="text" id="booking-flight-departure-terminal" name="departureTerminal0" class="form-control"
                                       v-model="booking?.traffic?.find(t=> t.traffic_type=='flight').departure_terminalNo" required />
                            </div>
                        </div>
                        <div class="col-md-6 col-sm-6 col-xs-12" v-if="checkBookingFieldforFlight('departure_airlineName')">
                            <!-- Airline -->
                            <div class="form-group">
                                <label>@Localizer["booking_step1_flight_info_airline"]<span class="text-danger">*</span></label>
                                <input placeholder="@Localizer["booking_step1_flight_info_airline_placeholder"]" autocomplete="on" type="text" id="booking-flight-departure-airline" name="departureAirline0" class="form-control"
                                       v-model="booking.traffic?.find(t=> t.traffic_type=='flight').departure_airlineName" required />
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6 col-sm-6 col-xs-12" v-if="checkBookingFieldforFlight('departure_flightNo')">
                            <!-- Flight No -->
                            <div class="form-group">
                                <label>@Localizer["booking_step1_flight_info_flight_no"]<span class="text-danger">*</span></label>
                                <input placeholder="@Localizer["booking_step1_flight_info_flight_no_placeholder"]" autocomplete="on" type="text" id="booking-flight-departure-flight-number" name="departureFlightNo0" class="form-control"
                                       v-model="booking?.traffic?.find(t=> t.traffic_type=='flight').departure_flightNo" required />
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6 col-sm-6 col-xs-12 form-group" v-if="checkBookingFieldforFlight('departure_date')">
                            <!-- Departure Date -->
                            <div class="form-group">
                                <label>@Localizer["booking_step1_flight_info_departure_date"]<span class="text-danger">*</span></label>
                                <datepicker v-model="booking?.traffic?.find(t=> t.traffic_type=='flight').departure_date" placeholder="@Localizer["booking_step1_flight_info_departure_date_placeholder"]"></datepicker>
                                @*<input placeholder="@Localizer["booking_step1_flight_info_arrival_time_placeholder"]" autocomplete="on" type="text" id="booking-flight-departure-flight-number" name="departureFlightNo0" class="form-control"
                    v-model="booking?.traffic?.find(t=> t.traffic_type=='flight').departure_date" required />*@
                            </div>
                        </div>
                        <div class="col-sm-6 col-sm-6 col-xs-12 form-group" v-if="checkBookingFieldforFlight('departure_time')">
                            <!-- Departure Time -->
                            <div class="form-group">
                                <label>@Localizer["booking_step1_flight_info_departure_time"]<span class="text-danger">*</span></label>
                                <input placeholder="@Localizer["booking_step1_flight_info_departure_time_placeholder"]" autocomplete="on" type="text" id="booking-flight-departure-flight-number" name="departureFlightNo0" class="form-control"
                                       v-model="booking?.traffic?.find(t=> t.traffic_type=='flight').departure_time" required />
                            </div>
                        </div>
                    </div>
                </div>

            </template>

            <!-- Flight: Arrival Info -->
            <template v-if="bookingField?.traffics?.find(t => t.traffic_type?.traffic_type_value == 'flight')">
                <div class="traveler-con">
                    <div class="sub-title">
                        @Localizer["booking_step1_flight_info_arrival_info"]?.Value.Replace("%s", string.Empty).Replace(" ", string.Empty)
                    </div>
                    <div class="row">
                        <div class="col-md-6 col-sm-6 col-xs-12" v-show="checkBookingFieldforFlight('arrival_flightType')">
                            <!-- Flight Type -->
                            <div class="form-group">
                                <label>@Localizer["booking_step1_flight_info_flight_type"]<span class="text-danger">*</span></label>
                                <select id="booking-flight-arrival-type" name="arrivalFlightType0" class="form-control"
                                        v-model="booking.traffic.find(t=> t.traffic_type=='flight').arrival_flightType" required>
                                    <option disabled="disabled" value="">@Localizer["booking_step1_flight_info_flight_type_placeholder"]</option>
                                    <template v-for="temp in getBookingFieldReferenceforFlight('arrival_flightType')">
                                        <option :value="temp.id" v-html="temp.name"></option>
                                    </template>
                                </select>
                            </div>
                        </div>
                        <div class="col-md-6 col-sm-6 col-xs-12" v-show="checkBookingFieldforFlight('arrival_airport')">
                            <!-- Arrival Airport -->
                            <div class="form-group">
                                <label>@Localizer["booking_step1_flight_info_arrival_airport"]<span class="text-danger">*</span></label>
                                <select id="booking-flight-arrival-airport" class="form-control" name="arrivalAirport0"
                                        v-model="booking?.traffic?.find(t=> t.traffic_type=='flight').arrival_airport" required>
                                    <option disabled="disabled" value="">@Localizer["booking_step1_flight_info_arrival_airport_placeholder"]</option>
                                    <template v-for="temp in getBookingFieldReferenceforFlight('arrival_airport')">
                                        <option :value="temp.code" v-html="temp.name"></option>
                                    </template>
                                </select>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6 col-sm-6 col-xs-12 form-group" v-show="checkBookingFieldforFlight('arrival_terminalNo')">
                            <!-- Terminal No -->
                            <label>@Localizer["booking_step1_flight_info_terminal_no"]<span class="text-danger">*</span></label>
                            <input placeholder="@Localizer["booking_step1_flight_info_terminal_no_placeholder"]" autocomplete="on" type="text" id="booking-flight-arrival-terminal" name="arrivalTerminal0" class="form-control"
                                   v-model="booking?.traffic?.find(t=> t.traffic_type=='flight').arrival_terminalNo" required>
                        </div>
                        <div class="col-md-6 col-sm-6 col-xs-12 form-group" v-show="checkBookingFieldforFlight('arrival_airlineName')">
                            <!-- Airline -->
                            <label>@Localizer["booking_step1_flight_info_airline"]<span class="text-danger">*</span></label>
                            <input placeholder="@Localizer["booking_step1_flight_info_airline_placeholder"]" autocomplete="on" type="text" id="booking-flight-arrival-airline" name="arrivalAirline0" class="form-control"
                                   v-model="booking?.traffic?.find(t=> t.traffic_type=='flight').arrival_airlineName" required>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6 col-sm-6 col-xs-12 form-group" v-show="checkBookingFieldforFlight('arrival_flightNo')">
                            <!-- Flight No -->
                            <label>@Localizer["booking_step1_flight_info_flight_no"]<span class="text-danger">*</span></label>
                            <input placeholder="@Localizer["booking_step1_flight_info_flight_no_placeholder"]" autocomplete="on" type="text" id="booking-flight-arrival-flight-number" name="arrivalFlightNo0" class="form-control"
                                   v-model="booking.traffic.find(t=> t.traffic_type=='flight').arrival_flightNo" required>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6 col-sm-6 col-xs-12 form-group" v-show="checkBookingFieldforFlight('arrival_date')">
                            <!-- Arrival Date -->
                            <div class="form-group">
                                <label>@Localizer["booking_step1_flight_info_arrival_date"]<span class="text-danger">*</span></label>
                                <datepicker v-model="booking?.traffic?.find(t=> t.traffic_type=='flight').arrival_date" placeholder="@Localizer["booking_step1_flight_info_arrival_date_placeholder"]"></datepicker>
                                @*<input placeholder="@Localizer["booking_step1_flight_info_arrival_time_placeholder"]" autocomplete="on" type="text" id="booking-flight-departure-flight-number" name="departureFlightNo0" class="form-control"
                                    v-model="booking?.traffic?.find(t=> t.traffic_type=='flight').arrival_date" required />*@
                            </div>
                        </div>
                        <div class="col-sm-6 col-sm-6 col-xs-12 form-group" v-show="checkBookingFieldforFlight('arrival_time')">
                            <!-- Arrival Time -->
                            <div class="form-group">
                                <label>@Localizer["booking_step1_flight_info_arrival_time"]<span class="text-danger">*</span></label>
                                <input placeholder="@Localizer["booking_step1_flight_info_departure_time_placeholder"]" autocomplete="on" type="text" id="booking-flight-departure-flight-number" name="departureFlightNo0" class="form-control"
                                       v-model="booking?.traffic?.find(t=> t.traffic_type=='flight').arrival_time" required />
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6 col-sm-6 col-xs-12 form-group" v-show="checkBookingFieldforFlight('arrival_visa', 'Flight')">
                            <!-- Need VISA? -->
                            <label>@Localizer["booking_step1_is_visa_required"]<span class="text-danger">*</span></label>
                            <div>
                                <div class="form-check form-check-inline">
                                    <input class="form-check-input" type="radio" name="visa" id="visaT" value="1" required v-on:click="setArrivalVisa('1')"> @*v-model="booking?.traffic?.find(t=> t.traffic_type=='flight').arrival_visa"*@
                                    <label class="form-check-label" for="visaT">@Localizer["common_yes"]</label>
                                </div>
                                <div class="form-check form-check-inline">
                                    <input class="form-check-input" type="radio" name="visa" id="visaF" value="0" required v-on:click="setArrivalVisa('2')"> @*v-model="booking.traffic.find(t=> t.traffic_type=='flight').arrival_visa"*@
                                    <label class="form-check-label" for="visaF">@Localizer["common_no"]</label>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </template>

            <!-- RentCar ("rentcar_01": A to A / "rentcar_02": A to B) -->
            <template v-if="bookingField?.traffics?.find(t => t.traffic_type?.traffic_type_value == 'rentcar_01' || t.traffic_type?.traffic_type_value == 'rentcar_02')">
                <div class="traveler-con">
                    <div class="sub-title">
                        @Localizer["booking_step1_rent_car"]
                    </div>
                    <div class="row">
                        <div class="col-md-6 col-sm-6 col-xs-12 form-group" v-show="checkBookingFieldforRentCar('s_location')">
                            <!-- Pickup Location Selecting -->
                            <label>@Localizer["booking_step1_rent_car_pick_up_office"]<span class="text-danger">*</span></label>
                            <select class="form-control" @@change="changeRentLocation($event.target.value, 'pick')"
                                    v-model="booking?.traffic?.find(t=> t.traffic_type.startsWith('rentcar')).s_location" required>
                                <option value="">@Localizer["booking_step1_rent_car_pick_up_office_placeholder"]</option>
                                <template v-for="temp in getBookingFieldReferenceforRentCar('s_location','rentcar_01')">
                                    <option :value="temp.id" v-html="temp.name"></option>
                                </template>
                                <template v-for="temp in getBookingFieldReferenceforRentCar('s_location','rentcar_02')">
                                    <option :value="temp.id" v-html="temp.name"></option>
                                </template>
                            </select>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6 col-sm-6 col-xs-12 form-group" v-show="checkBookingFieldforRentCar('s_date')">
                            <!-- Pickup Date -->
                            <label>@Localizer["booking_step1_rent_car_pick_up_date"]<span class="text-danger">*</span></label>
                            <div class="input-group">
                                <datepicker v-model="booking?.traffic?.find(t=> t.traffic_type.startsWith('rentcar')).s_date" placeholder="@Localizer["booking_step1_rent_car_pick_up_date"]"></datepicker>
                                @*<input id="rentPickUpDate0" name="pickUpDate0" placeholder="@Localizer["booking_step1_rent_car_pick_up_date"]" type="text"
                                       v-model="booking?.traffic?.find(t=> t.traffic_type.startsWith('rentcar')).s_date" class="form-control has-datepicker" required>*@
                                <div class="input-group-append">
                                    <span class="input-group-text bg-white"><i class="icon-calendar icons"></i></span>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-4 col-sm-4 col-xs-12 form-group" v-show="checkBookingFieldforRentCar('s_time')">
                            <!-- Pickup Time -->
                            <label>@Localizer["booking_step3_car_rentals_dep_time"]<span class="text-danger">*</span></label>
                            <select class="form-control" id="booking_pickup_time" v-model="booking?.traffic?.find(t=> t.traffic_type.startsWith('rentcar')).s_time" required>
                                <option value="">@Localizer["common_select_set"]</option>
                                <template v-for="temp in getBookingFieldReferenceTimeforRentCar('s_time', ['rentcar_01', 'rentcar_02'])">
                                    <option :value="temp.id" v-html="temp.name"></option>
                                </template>
                            </select>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6 col-sm-6 col-xs-12 form-group" v-show="checkBookingFieldforRentCar('e_location')">
                            <!-- Dropoff Location Selecting -->
                            <label>@Localizer["booking_step1_rent_car_drop_off_office"]<span class="text-danger">*</span></label>
                            <select class="form-control" v-model="booking?.traffic?.find(t=> t.traffic_type.startsWith('rentcar')).e_location" @@change="changeRentLocation($event.target.value, 'drop')" required>
                                <option value="">@Localizer["booking_step1_rent_car_drop_off_office_placeholder"]</option>
                                <template v-for="temp in getBookingFieldReferenceforRentCar('e_location', 'rentcar_01')">
                                    <option :value="temp.id" v-html="temp.name"></option>
                                </template>
                                <template v-for="temp in getBookingFieldReferenceforRentCar('e_location', 'rentcar_02')">
                                    <option :value="temp.id" v-html="temp.name"></option>
                                </template>
                            </select>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6 col-sm-6  col-xs-12 form-group" v-show="checkBookingFieldforRentCar('e_date')">
                            <!-- Dropoff Date -->
                            <label>@Localizer["booking_step1_rent_car_drop_off_date"]<span class="text-danger">*</span></label>
                            <div class="input-group" name="rentDropOffDate0">
                                <datepicker v-model="booking?.traffic?.find(t=> t.traffic_type.startsWith('rentcar')).e_date" placeholder="@Localizer["booking_step1_rent_car_drop_off_date_placeholder"]"></datepicker>
                                @*<input name="dropOffDate0" v-model="booking?.traffic?.find(t=> t.traffic_type.startsWith('rentcar')).e_date"
                                       placeholder="@Localizer["booking_step1_rent_car_drop_off_date_placeholder"]" type="text" class="form-control has-datepicker" required>*@
                                <div class="input-group-append">
                                    <span class="input-group-text bg-white"><i class="icon-calendar icons"></i></span>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-4 col-sm-4 col-xs-12 form-group" v-show="checkBookingFieldforRentCar('e_time')">
                            <!-- Dropoff Time -->
                            <label>@Localizer["booking_step1_rent_car_drop_off_time"]<span class="text-danger">*</span></label>
                            <select id="booking_dropoff_time" name="dropOffTime0" class="form-control" v-model="booking?.traffic?.find(t=> t.traffic_type.startsWith('rentcar')).e_time" required>
                                <option value="">@Localizer["common_select_set"]</option>
                                <template v-for="temp in getBookingFieldReferenceTimeforRentCar('e_time', ['rentcar_01', 'rentcar_02'])">
                                    <option :value="temp.id" v-html="temp.name"></option>
                                </template>
                            </select>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6 col-sm-6  col-xs-12 form-group" v-show="checkBookingFieldforRentCar('provide_wifi')">
                            <!-- Need Free Wifi -->
                            <label>@Localizer["booking_step1_rent_car_is_need_free_wifi"] <span class="text-danger">*</span></label>
                            <div class="form-inline radio-has-son">
                                <label><input type="radio" name="has_wifi" value="true" v-on:click="setWifi('1')"> @Localizer["common_need"]</label>
                                <label><input type="radio" name="has_wifi" value="false" v-on:click="setWifi('2')"> @Localizer["common_no_need"]</label>
                            </div>
                            <div class="form-group-son form-group must"></div>
                        </div>
                        <div class="col-md-4 col-sm-4 col-xs-12 form-group" v-show="checkBookingFieldforRentCar('provide_gps')">
                            <!-- Need Free GPS -->
                            <label>@Localizer["booking_step1_rent_car_is_need_free_gps"] <span class="text-danger">*</span></label>
                            <div class="form-inline radio-has-son">
                                <label><input type="radio" name="has_gps" value="true" v-on:click="setGps('1')"> @Localizer["common_need"]</label>
                                <label><input type="radio" name="has_gps" value="false" v-on:click="setGps('2')"> @Localizer["common_no_need"]</label>
                            </div>
                            <div class="form-group-son form-group must"></div>
                        </div>
                    </div>
                </div>
            </template>

            <!-- Pickup/Dropoff("pickup_03") -->
            <template v-if="bookingField?.traffics?.find(t => t.traffic_type?.traffic_type_value == 'pickup_03')">
                <div class="traveler-con">
                    <div class="sub-title">
                        @Localizer["booking_step1_pick_up_03"]
                    </div>
                    <div class="row">
                        <div class="col-md-6 col-sm-6 col-xs-12 form-group" v-show="checkBookingFieldforPickUp('s_date')">
                            <!-- Pickup Date -->
                            <label>@Localizer["booking_step1_rent_car_pick_up_03_date"]<span class="text-danger">*</span></label>
                            <div class="input-group">
                                <datepicker v-model="booking?.traffic?.find(t=> t.traffic_type.startsWith('pickup_03')).s_date" placeholder="@Localizer["booking_step1_rent_car_pick_up_date"]"></datepicker>
                                @*<input id="rentPickUpDate0" name="pickUpDate0" placeholder="@Localizer["booking_step1_rent_car_pick_up_date"]" type="text"
                                       v-model="booking?.traffic?.find(t=> t.traffic_type.startsWith('pickup_03')).s_date" class="form-control has-datepicker" required>*@
                                <div class="input-group-append">
                                    <span class="input-group-text bg-white"><i class="icon-calendar icons"></i></span>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6 col-sm-6 col-xs-12 form-group" v-show="checkBookingFieldforPickUp('s_location')">
                            <label>@Localizer["booking_step1_rent_car_pick_up_03_office_placeholder"]<span class="text-danger">*</span></label>
                            <!-- Pickup Location Selecting -->
                            <select class="form-control" @@change="changeRentLocation($event.target.value, 'pick')"
                                    v-model="booking?.traffic?.find(t=> t.traffic_type.startsWith('pickup')).s_location" required>
                                <option value="">@Localizer["booking_step1_rent_car_pick_up_office_placeholder"]</option>
                                <template v-for="temp in getBookingFieldReferenceforRentCar('s_location','pickup_03')">
                                    <option :value="temp.id" v-html="`${temp.name} ${temp.address} / ${temp.s_time}~${temp.e_time}`"></option>
                                </template>
                            </select>
                        </div>
                    </div>
                </div>
            </template>

            <!-- CharterCar("rentcar_03") & Pickup/Dropoff("pickup_04") -->
            <template v-if="bookingField?.traffics?.find(t => t.traffic_type?.traffic_type_value == 'rentcar_03' || t.traffic_type?.traffic_type_value == 'pickup_04') ">
                <div class="traveler-con">
                    <div class="row">
                        <div class="col-md-4 col-sm-6 col-xs-12 form-group" v-show="checkBookingFieldforRentCar('s_date','rentcar_03') || checkBookingFieldforRentCar('s_date','pickup_04')">
                            <!-- Pickup Date -->
                            <label>@Localizer["booking_step1_shuttle_data_shuttle_date"]<span class="text-danger">*</span></label>
                            <div class="input-group" v-show="checkBookingFieldforRentCar('s_date','pickup_04')">
                                <datepicker v-model="booking?.traffic?.find(t=> t.traffic_type.startsWith('pickup_04')).s_date" placeholder="@Localizer["booking_step1_shuttle_data_shuttle_date_placeholder"]"></datepicker>
                                @*<input id="pickupDate0" name="pickUpDate0" class="form-control has-datepicker" placeholder="@Localizer["booking_step1_shuttle_data_shuttle_date_placeholder"]" type="text"
                                    v-model="booking?.traffic?.find(t=> t.traffic_type.startsWith('pickup_04')).s_date" required>*@
                                <div class="input-group-append">
                                    <span class="input-group-text bg-white"><i class="icon-calendar icons"></i></span>
                                </div>
                            </div> 
                        </div>

                        <div class="col-md-8 col-sm-6 col-xs-12 form-group" v-show="checkBookingFieldforRentCar('s_time','pickup_04')">
                            <!-- Pickup Time Selecting -->
                            <label>@Localizer["booking_step1_shuttle_data_pick_up_time"]<span class="text-danger">*</span></label>
                            <div class="row">
                                <div class="col-sm-6 col-xs-12 form-group">
                                    <select id="booking-shuttle-time" class="form-control" name="shuttlePickUpTime0" @@change="changeShuttleTime($event.target.value)" required>
                                        <option value="">@Localizer["booking_step1_shuttle_data_pick_up_time_placeholder"]</option>
                                        <template v-for="pk in getPickupTime()">
                                            <option :value="pk.id" v-if="pk.hour !=0">{{ ('00' + pk.hour).slice(-2) }}:{{ ('00' + pk.min).slice(-2) }}</option>
                                        </template>
                                        <!-- Custom Pickup Time -->
                                        <template v-for="pk in getPickupCustomTime()">
                                            <option value="customize" :data-range="pk.time_range">@Localizer["booking_step1_shuttle_data_customized_shuttle_time"]</option>
                                        </template>
                                    </select>
                                </div>
                                <!-- Custom Pickup Time Selecting -->
                                <div class="col-sm-6 col-xs-12 form-group" v-show="show_cus_shuttle">  
                                    <div class="time-select">
                                        <div class="form-group">
                                            <select class="form-control" id="selShuttleCusHour" name="selShuttleCusHour" @@change="changeShuttleHour()">
                                                <option value="">--</option>
                                            </select>
                                        </div>
                                        <span class="time-gap">@Localizer["common_hr"]</span> 
                                        <div class="form-group">
                                            <select class="form-control" id="selShuttleCusMinute" name="selShuttleCusMinute" @@change="changeShuttleMinute()">
                                                <option value="">--</option>
                                            </select>
                                        </div>
                                        <span class="time-gap">@Localizer["common_min"]</span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6 col-sm-12 form-group" v-show="checkBookingFieldforRentCar('s_location','pickup_04')">
                            <!-- Pickup Location -->
                            <label>@Localizer["booking_step1_shuttle_data_pick_up_location"]<span class="text-danger">*</span></label>
                            <textarea id="booking-shuttle-pickup-location" placeholder="@Localizer["booking_step1_shuttle_data_pick_up_location_placeholder"]" name="pickUpLocation0" rows="2" class="form-control"
                                      v-model="booking.traffic.find(t=>t.traffic_type.startsWith('pickup')).s_location" required></textarea>
                        </div>
                        <div class="col-md-6 col-sm-12 form-group" v-show="checkBookingFieldforRentCar('e_location','pickup_04')">
                            <!-- Dropoff Location -->
                            <label>@Localizer["booking_step1_shuttle_data_drop_off_location"]<span class="text-danger">*</span></label>
                            <textarea id="booking-shuttle-dropoff-location" placeholder="@Localizer["booking_step1_shuttle_data_drop_off_location_placeholder"]" name="dropOffLocation0" rows="2" class="form-control"
                                      v-model="booking.traffic.find(t=>t.traffic_type.startsWith('pickup')).e_location" required></textarea>
                        </div>
                    </div>
                    <div class="row" v-show="bookingField?.traffics?.find(t => t.traffic_type?.traffic_type_value == 'rentcar_03')">
                        <!-- Charter Car Route Selection -->
                        <div class="col-md-6 col-sm-12 form-group">
                            <label>@Localizer["booking_step1_shuttle_data_charter_route"]<span class="text-danger">*</span></label>
                            <select id="booking-shuttle-route" class="form-control" name="charterRoute0" @@change="changeShuttleRoute($event.target.value)" required>
                                <option value="">
                                    @Localizer["booking_step1_shuttle_data_charter_route_placeholder"]
                                </option>
                                <template v-for="temp in getBookingFieldReferenceforRentCar('s_location','rentcar_03')">
                                    <option :value="temp.id" v-html="temp.route_local"></option>
                                </template>
                            </select>
                        </div>
                    </div>
                    <div class="col-md-12 form-group" v-show="show_cus_route">
                        <!-- Custom Routing -->
                        <div class="form-group">
                            <label>@Localizer["booking_step1_shuttle_data_custom_routes"]<span class="text-danger">*</span></label>
                            <div class="d-flex">
                                <input placeholder="@Localizer["booking_step1_shuttle_data_custom_routes_placeholder"]" autocomplete="on" type="text" id="booking-shuttle-custom-route" class="form-control flex-grow-1">
                                <a class="btn btn-primary btn-next ml-2 text-white" style="flex-basis: 50px;" @@click="addCusRoute()"> <!--增加--> @Localizer["common_add"]</a>
                            </div>
                            <div class="tip kk-u-text-dark"> @Localizer["booking_step1_shuttle_data_custom_routes_note_1"] <span>2</span> @Localizer["booking_step1_shuttle_data_custom_routes_note_2"] </div>
                            <div class="d-flex flex-row mt-3 cus-route-wrapper">
                                <template v-for="(item, idx) in booking_custom_routes">
                                    <div class="cus-route-item  mr-2"><span v-html="item"></span> <i class="ri-close-line" @@click="removeCusRoute(idx)"></i></div>
                                </template>
                            </div>
                        </div>
                    </div>
                </div>
            </template>

            <!-- Passenger Qty -->
            <template v-if="bookingField?.traffics?.find(t => t.traffic_type?.traffic_type_value =='psg_qty') ">
                <div class="traveler-con">
                    <div class="sub-title">@Localizer["booking_step1_car_psgr"]</div>
                    <!-- Passenger -->
                    <div class="passenger-group">
                        <span class="passenger-group-title">@Localizer["booking_step1_car_psgr_custom_quantity"]</span>
                        <div class="row">
                            <div class="col-sm-4 col-xs-12">
                                <!-- Adult Qty -->
                                <div>
                                    <small>@Localizer["common_adult"] @Localizer["common_years_old"]</small>
                                    <div class="form-group">
                                        <select id="booking-passenger-quantity-adult-0" name="booking-passenger-quantity-adult-0" class="form-control" v-model="booking.traffic.find(t=>t.traffic_type.startsWith('psg_qty')).carpsg_adult" required>
                                            <option value="" disabled="disabled"> -- </option>
                                            <option value="0">0</option>
                                            <template v-for="idx in 30">
                                                <option :value="idx.toString()" v-html="idx"></option>
                                            </template>
                                        </select>
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-4 col-xs-12">
                                <!-- Child Qty -->
                                <div>
                                    <small>@Localizer["common_child"] @Localizer["common_years_old"]</small>
                                    <div class="form-group">
                                        <select id="booking-passenger-quantity-child-0" name="booking-passenger-quantity-child-0" class="form-control" v-model="booking.traffic.find(t=>t.traffic_type.startsWith('psg_qty')).carpsg_child" required>
                                            <option value="" disabled="disabled"> -- </option>
                                            <option value="0">0</option>
                                            <template v-for="idx in 30">
                                                <option :value="idx.toString()" v-html="idx"></option>
                                            </template>
                                        </select>
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-4 col-xs-12">
                                <!-- Infant Qty -->
                                <div>
                                    <small>@Localizer["common_infant"] @Localizer["common_years_old"]</small>
                                    <div class="form-group">
                                        <select id="booking-passenger-quantity-infant-0" name="booking-passenger-quantity-infant-0" class="form-control" v-model="booking.traffic.find(t=>t.traffic_type.startsWith('psg_qty')).carpsg_infant" required>
                                            <option value="" disabled="disabled"> -- </option>
                                            <option value="0">0</option>
                                            <template v-for="idx in 30">
                                                <option :value="idx.toString()" v-html="idx"></option>
                                            </template>
                                        </select>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <!-- Luggage Quantity -->
                    <div class="passenger-group">
                        <span class="passenger-group-title">@Localizer["booking_step1_car_psgr_carry_luggage_quantity"]</span>
                        <div class="row">
                            <div class="col-sm-4 col-xs-12">
                                <!-- Carry baggage -->
                                <div>
                                    <small>@Localizer["booking_step1_car_psgr_carry_luggage"]</small>
                                    <div class="form-group">
                                        <select id="booking-passenger-quantity-luggage-carry-0" name="booking-passenger-quantity-luggage-carry-0" class="form-control"
                                                v-model="booking.traffic.find(t=>t.traffic_type.startsWith('psg_qty')).luggage_carry" required>
                                            <option value="" disabled="disabled"> -- </option>
                                            <option value="0">0</option>
                                            <template v-for="idx in 30">
                                                <option :value="idx.toString()" v-html="idx"></option>
                                            </template>
                                        </select>
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-4 col-xs-12">
                                <!-- Checked baggage (over 21 inches) -->
                                <div>
                                    <small>@Localizer["booking_step1_car_psgr_checked_luggage"]</small>
                                    <div class="form-group">
                                        <select id="booking-passenger-quantity-luggage-checked-0" name="booking-passenger-quantity-luggage-checked-0" class="form-control"
                                                v-model="booking.traffic.find(t=>t.traffic_type.startsWith('psg_qty')).luggage_check" required>
                                            <option value="" disabled="disabled"> -- </option>
                                            <option value="0">0</option>
                                            <template v-for="idx in 30">
                                                <option :value="idx.toString()" v-html="idx"></option>
                                            </template>
                                        </select>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <!-- Safety Seat for Child -->
                    <div class="passenger-group">
                        <span class="passenger-group-title">
                            @Localizer["booking_step1_car_psgr_child_seat_quantity"]
                        </span>
                        <div class="row">
                            <div class="col-sm-4 col-xs-12">
                                <!-- Supplier Provided -->
                                <div>
                                    <small>@Localizer["booking_step1_car_psgr_supplier_provided"]</small>
                                    <div class="form-group">
                                        <select id="booking-passenger-quantity-childseat-supplier-0" name="booking-passenger-quantity-childseat-supplier-0" class="form-control"
                                                v-model="booking.traffic.find(t=>t.traffic_type.startsWith('psg_qty')).safetyseat_self_child" required>
                                            <option value="" disabled="disabled"> -- </option>
                                            <option value="0">0</option>
                                            <template v-for="idx in 10">
                                                <option :value="idx.toString()" v-html="idx"></option>
                                            </template>
                                        </select>
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-4 col-xs-12">
                                <!-- Self Provided -->
                                <div>
                                    <small>@Localizer["booking_step1_car_psgr_self_provided"]</small>
                                    <div class="form-group">
                                        <select id="booking-passenger-quantity-childseat-customer-0" name="booking-passenger-quantity-childseat-customer-0" class="form-control"
                                                v-model="booking.traffic.find(t=>t.traffic_type.startsWith('psg_qty')).safetyseat_sup_child" required>
                                            <option value="" disabled="disabled"> -- </option>
                                            <option value="0">0</option>
                                            <template v-for="idx in 10">
                                                <option :value="idx.toString()" v-html="idx"></option>
                                            </template>
                                        </select>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <!-- Safety Seat for Infant -->
                    <div class="passenger-group">
                        <span class="passenger-group-title">@Localizer["booking_step1_car_psgr_infant_seat_quantity"]</span>
                        <div class="row">
                            <div class="col-sm-4 col-xs-12">
                                <!-- Supplier Provided -->
                                <div>
                                    <small>@Localizer["booking_step1_car_psgr_supplier_provided"]</small> <div class="form-group">
                                        <select id="booking-passenger-quantity-infantseat-supplier-0" name="booking-passenger-quantity-infantseat-supplier-0" class="form-control"
                                                v-model="booking.traffic.find(t=>t.traffic_type.startsWith('psg_qty')).safetyseat_sup_infant" required>
                                            <option value="" disabled="disabled"> -- </option>
                                            <option value="0">0</option>
                                            <template v-for="idx in 10">
                                                <option :value="idx.toString()" v-html="idx"></option>
                                            </template>
                                        </select>
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-4 col-xs-12">
                                <!-- Self Provided -->
                                <div>
                                    <small>@Localizer["booking_step1_car_psgr_self_provided"]</small>
                                    <div class="form-group">
                                        <select name="booking-passenger-quantity-infantseat-customer-0" class="form-control"
                                                v-model="booking.traffic.find(t=>t.traffic_type.startsWith('psg_qty')).safetyseat_self_infant" required>
                                            <option value="" disabled="disabled">--</option>
                                            <option value="0">0</option>
                                            <template v-for="idx in 10">
                                                <option :value="idx.toString()" v-html="idx"></option>
                                            </template>
                                        </select>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </template>

            <!-- Send (Receiver) -->
            <template v-if="bookingField?.custom?.cus_type?.list_option?.indexOf('send') > -1">
                <div class="traveler-con">
                    <div class="sub-title">@Localizer["booking_step1_send_data"]</div>
                    <!-- Receiver -->
                    <div class="row mb-4">
                        <div class="col-md-6 col-sm-6 col-xs-12" v-show="checkBookingField('custom.native_first_name', 'send')">
                            <!-- Receiver First Name -->
                            <div class="form-group">
                                <label>@Localizer["booking_step1_send_data_receiver_firstname"]<span class="text-danger">*</span></label>
                                <input type="text" name="receiverFirstName" class="form-control" v-model="booking.custom.find(t=>t.cus_type === 'send').native_first_name" placeholder="@Localizer["booking_step1_local_firstname_placeholder"]" required>
                            </div>
                        </div>
                        <div class="col-md-6 col-sm-6 col-xs-12" v-show="checkBookingField('custom.native_last_name', 'send')">
                            <!-- Receiver Last Name -->
                            <div class="form-group">
                                <label>@Localizer["booking_step1_send_data_receiver_lastname"]<span class="text-danger">*</span></label>
                                <input type="text" name="receiverLastName" class="form-control" v-model="booking.custom.find(t=>t.cus_type === 'send').native_last_name" placeholder="@Localizer["booking_step1_local_lastname_placeholder"]" required>
                            </div>
                        </div>
                        <div class="col-md-6 col-sm-6 col-xs-12" v-show="checkBookingField('custom.tel_number', 'send')">
                            <!-- Tel Country Code & Phone Number -->
                            <div class="form-group">
                                <label>@Localizer["booking_step1_send_data_receiver_tel"]<span class="text-danger">*</span></label>
                                <div class="input-group buyer-tel-country">
                                    <v-select :options="country_areas" class="tel-country" :reduce="country => country.tel_area" label="tel_area"
                                              :get-option-label="getTelAreaLabel" v-model="booking.custom.find(t=>t.cus_type === 'send').tel_country_code" placeholder="@Localizer["booking_step1_send_data_receiver_tel_placeholder"]">
                                        <template #option="option">
                                            <span>+{{option.tel_area}} {{ option.country_name }} </span>
                                        </template>
                                    </v-select>
                                    @*<select name="send_tel_number" class="form-control" v-model="booking.custom.find(t=>t.cus_type === 'send').tel_country_code" required>
                                        <option value="">@Localizer["booking_step1_send_data_receiver_tel_placeholder"]</option>
                                        <template v-for="tel in getBookingFieldReference('custom.telCountryCode')">
                                            <option :value="tel.code" v-html="`${tel.info} ${tel.code}`"></option>
                                        </template>
                                    </select>*@
                                    <input placeholder="@Localizer["component_form_contact_tel_placeholder"]" type="tel" class="form-control form-phone" name="tel_number" v-model="booking.custom.find(t=>t.cus_type === 'send').tel_number" autocomplete="off" required>
                                </div>
                            </div>
                        </div>
                    </div>
                    <!-- Receive Address Info -->
                    <div class="row" v-show="checkBookingField('custom.country_cities', 'send')">
                        <div class="col-12 mb-2">@Localizer["booking_step1_send_data_receive_address"]</div>
                        <div class="col-md-4 col-sm-6 col-xs-12">
                            <!-- Receive Country -->
                            <div class="form-group">
                                <small>@Localizer["booking_step1_send_data_receive_address_country"]</small><span class="text-danger">*</span>
                                <select name="receiverCountry" id="receiverCountry" class="form-control" @@change="setCountry($refs.receiver_city, $event.target.value)" required>
                                    <option value="">@Localizer["common_select_set"]</option>
                                    <template v-for="na in getBookingFieldReference('custom.country_cities')">
                                        <option :value="na.id" v-html="na.name"></option>
                                    </template>
                                </select>
                            </div>
                        </div>
                        <div class="col-md-4 col-sm-6 col-xs-12">
                            <!-- Receive City -->
                            <div class="form-group">
                                <small>@Localizer["booking_step1_send_data_receive_address_city"]</small><span class="text-danger">*</span>
                                <select ref="receiver_city" class="form-control" id="receiverCity" name="receiverCity" required>
                                    <option value="">@Localizer["common_select_set"]</option>
                                </select>
                            </div>
                        </div>
                        <div class="col-md-4 col-sm-6 col-xs-12" v-show="checkBookingField('custom.zipcode', 'send')">
                            <!-- Receive ZipCode -->
                            <div class="form-group">
                                <small>@Localizer["booking_step1_send_data_zip_colde"]</small><span class="text-danger">*</span>
                                <input id="booking-send-data-receiver-postalcode" name="postal0" type="text" v-model="booking.custom.find(t=>t.cus_type === 'send').zipcode" class="form-control" required />
                            </div>
                        </div>
                        <div class="col-md-6 col-sm-12 col-xs-12" v-show="checkBookingField('custom.address', 'send')">
                            <!-- Receive Address -->
                            <div class="form-group">
                                <small>@Localizer["booking_step1_send_data_receive_address_detail"]</small><span class="text-danger">*</span>
                                <textarea placeholder="@Localizer["booking_step1_send_data_receive_address_placeholder"]" name="receiverAddress0" rows="2" class="form-control" v-model="booking.custom.find(t=>t.cus_type === 'send').address" required></textarea>
                            </div>
                        </div>

                    </div>
                    <!-- Hotel Info -->
                    <div class="row">
                        <div class="col-md-6 col-sm-6 col-xs-12 form-group" v-show="checkBookingField('custom.hotel_name', 'send')">
                            <!-- Hotel Name -->
                            <label>@Localizer["order_show_send_data_hotel_name"]<span class="text-danger">*</span></label>
                            <input placeholder="@Localizer["order_show_send_data_hotel_name"]" autocomplete="on" type="text" id="booking-send-data-hotel-name" name="hotelName0" class="form-control" v-model="booking.custom.find(t=>t.cus_type === 'send').hotel_name" />
                        </div>
                        <div class="col-md-6 col-sm-6 col-xs-12 form-group" v-show="checkBookingField('custom.hotel_tel_number', 'send')">
                            <!-- Hotel Tel -->
                            <label>@Localizer["order_show_send_data_hotel_tel"]<span class="text-danger">*</span></label>
                            <input placeholder="@Localizer["order_show_send_data_hotel_tel"]" autocomplete="on" type="tel" id="booking-send-data-hotel-tel" name="hotelTel0" class="form-control" v-model="booking.custom.find(t=>t.cus_type === 'send').hotel_tel_number" />
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6 col-sm-6 col-xs-12 form-group" v-show="checkBookingField('custom.english_first_name', 'send')">
                            <!-- Booking First Name (same as passport) -->
                            <label>@Localizer["booking_step1_send_data_buyer_passport_english_firstname"]<span class="text-danger">*</span></label>
                            <input placeholder="@Localizer["booking_step1_send_data_buyer_passport_english_firstname_placeholder"]" autocomplete="on" type="text" id="booking-send-data-booker-english-lastname" name="sendPassportFirstName0" class="form-control" v-model="booking.custom.find(t=>t.cus_type === 'send').english_first_name" />
                        </div>
                        <div class="col-md-6 col-sm-6 col-xs-12 form-group" v-show="checkBookingField('custom.english_last_name', 'send')">
                            <!-- Booking Last Name (same as passport) -->
                            <label>@Localizer["booking_step1_send_data_buyer_passport_english_lastname"]<span class="text-danger">*</span></label>
                            <input placeholder="@Localizer["booking_step1_send_data_buyer_passport_english_lastname_placeholder"]" autocomplete="on" type="text" id="booking-send-data-booker-english-firstname" name="sendPassportLastName0" class="form-control" v-model="booking.custom.find(t=>t.cus_type === 'send').english_last_name" />
                        </div>
                    </div>
                    <div class="row">
                        <!-- Booking Website -->
                        <div class="col-md-6 col-sm-6 col-xs-12 form-group" v-show="checkBookingField('custom.booking_website', 'send')">
                            <label>@Localizer["booking_step1_send_data_booking_website"]<span class="text-danger">*</span></label>
                            <input placeholder="@Localizer["booking_step1_send_data_booking_website_placeholder"]" autocomplete="on" type="text" id="booking-send-data-booking-website" name="bookingWebsite0" class="form-control" v-model="booking.custom.find(t=>t.cus_type === 'send').booking_website">
                        </div>
                        <!-- Booking Order Number -->
                        <div class="col-md-6 col-sm-6 col-xs-12 form-group" v-show="checkBookingField('custom.booking_order_no', 'send')">
                            <label>@Localizer["booking_step1_send_data_booking_order_no"]<span class="text-danger">*</span></label>
                            <input placeholder="@Localizer["booking_step1_send_data_booking_order_no_placeholder"]" autocomplete="on" type="text" id="booking-send-data-booking-number" name="bookingOrderNo0" class="form-control" v-model="booking.custom.find(t=>t.cus_type === 'send').booking_order_no" />
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6 col-sm-6 col-xs-12 form-group" v-show="checkBookingField('custom.check_in_date', 'send')">
                            <!-- Check In Date -->
                            <label>@Localizer["booking_step1_send_data_check_in_date"]<span class="text-danger">*</span></label>
                            <div class="input-group" name="checkInDate0">
                                <input id="booking-send-data-checkin-date" v-model="booking.custom.find(t=>t.cus_type === 'send').check_in_date" placeholder="@Localizer["booking_step1_send_data_check_in_date_placeholder"]" type="text" class="form-control has-datepicker">
                                <div class="input-group-append">
                                    <span class="input-group-text bg-white"><i class="icon-calendar icons"></i></span>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6 col-sm-6 col-xs-12 form-group" v-show="checkBookingField('custom.check_out_date', 'send')">
                            <!-- Check Out Date -->
                            <label>@Localizer["booking_step1_send_data_check_out_date"]<span class="text-danger">*</span></label>
                            <div class="input-group" name="checkOutDate0">
                                <input id="booking-send-data-checkout-date" v-model="booking.custom.find(t=>t.cus_type === 'send').check_out_date" placeholder="@Localizer["booking_step1_send_data_check_out_date_placeholder"]" type="text" class="form-control has-datepicker">
                                <div class="input-group-append">
                                    <span class="input-group-text bg-white"><i class="icon-calendar icons"></i></span>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </template>

            <!-- Mobile Device -->
            <template v-if="bookingField?.mobile_device && $.isEmptyObject(bookingField?.mobile_device) === false">
                <div class="traveler-con traveler-other">
                    <div class="sub-title"> @Localizer["booking_step1_other_data"] </div>
                    <div class="row">
                        <div class="col-md-6 col-sm-6 col-xs-12 form-group" v-show="bookingField?.mobile_device?.mobile_model_no?.is_require=='True'">
                            <!-- Model Number -->
                            <label>@Localizer["booking_step1_other_data_mobile_model_number"]<span class="text-danger">*</span></label>
                            <input placeholder="@Localizer["booking_step1_other_data_mobile_model_number_placeholder"]" autocomplete="on" type="text" name="booking-other-mobile-no" class="form-control" v-model="booking.mobile_device.mobile_model_no" required>
                        </div>
                        <div class="col-md-6 col-sm-6 col-xs-12 form-group" v-show="bookingField?.mobile_device?.IMEI?.is_require=='True'">
                            <!-- IMEI Number -->
                            <label>IMEI<span class="text-danger">*</span></label>
                            <input placeholder="@Localizer["booking_step1_other_data_imei_placeholder"]" autocomplete="on" type="text" name="booking-other-mobile-imei" class="form-control"
                                   minlength="15" maxlength="15" oninput="this.value=this.value.replace(/[^\d]/g, '')" v-model="booking.mobile_device.IMEI" required>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6 col-sm-6 col-xs-12 form-group" v-show="bookingField?.mobile_device?.active_date?.is_require=='True'">
                            <!-- Active Date -->
                            <div class="form-group">
                                <label>@Localizer["booking_step1_other_data_activation_date"]<span class="text-danger">*</span></label>
                                <input placeholder="@Localizer["booking_step1_other_data_activation_date_placeholder"]" autocomplete="on" type="text" id="booking-flight-departure-flight-number" name="departureFlightNo0" class="form-control"
                                       v-model="booking.mobile_device.active_date" required />
                            </div>
                        </div>
                    </div>
                </div>
            </template>

            <!-- Voucher Exchange Counter Info -->
            <template v-if="bookingField?.traffics?.find(t => t.traffic_type?.traffic_type_value == 'voucher')">
                <div class="traveler-con">
                    <div class="row">
                        <div class="col-md-6 col-sm-6 col-xs-12 form-group" v-show="checkBookingFieldforRentCar('s_location','voucher')">
                            <!-- Voucher Exchange Counter -->
                            <label>@Localizer["booking_step1_voucher_info_voucher_counter"]<span class="text-danger">*</span></label>
                            <select ref="voucher_ddl" class="form-control"
                                    v-model="booking?.traffic?.find(t=> t.traffic_type.startsWith('voucher')).s_location" required>
                                <option value="">@Localizer["booking_step1_rent_car_pick_up_office_placeholder"]</option>
                                <template v-for="temp in getBookingFieldReferenceforVoucher('s_location')">
                                    <option :value="temp.id" v-html="temp.name"></option>
                                </template>
                            </select>

                            <div class="mt-1">{{ getBookingFieldReferenceforVoucher('s_location').find(v => v.id === $refs?.voucher_ddl?.value)?.address }}</div>
                            <template v-for="tm_info in getBookingFieldReferenceforVoucher('s_location').find(v => v.id === $refs?.voucher_ddl?.value)?.time_list">
                                <div>{{ tm_info.from.hour }}:{{ tm_info.from?.minute ?? 0 }}~{{ tm_info.to.hour }}:{{ tm_info.to?.minute ?? 0 }} {{ getLocationWeekday(tm_info.weekDays) }}</div>
                            </template> 
                        </div>
                    </div>
                </div>
            </template>

            <!-- Contact Person During Travel -->
            <template v-if="bookingField?.custom?.cus_type?.list_option?.indexOf('contact') > -1">
                <div class="traveler-con">
                    <div class="sub-title">@Localizer["booking_step1_contact_data"]</div>

                    <div class="row">
                        <div class="col-md-6 col-sm-6 col-xs-12" v-show="checkBookingField('custom.native_first_name', 'contact')">
                            <!-- Contact First Name -->
                            <div class="form-group">
                                <label>@Localizer["booking_step1_contact_data_firstname"]<span class="text-danger">*</span></label>
                                <input name="contactFisrtName" placeholder="@Localizer["booking_step1_cust_data_passport_english_firstname_placeholder"]" type="text" class="form-control" v-model="booking.custom.find(c=>c.cus_type === 'contact').native_first_name" required>
                            </div>
                        </div>
                        <div class="col-md-6 col-sm-6 col-xs-12" v-show="checkBookingField('custom.native_last_name', 'contact')">
                            <!-- Contact Last Name -->
                            <div class="form-group">
                                <label>@Localizer["booking_step1_send_data_receiver_lastname"]<span class="text-danger">*</span></label>
                                <input name="contactLastName" placeholder="@Localizer["booking_step1_contact_data_lastname_placeholder"]" type="text" class="form-control" v-model="booking.custom.find(c=>c.cus_type === 'contact').native_last_name" required>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6 col-sm-6 col-xs-12" v-show="checkBookingField('custom.tel_number', 'contact')">
                        <!-- Have Tel? -->
                        <div class="form-group">
                            <label>
                                @Localizer["booking_step1_contact_data_contact_tel"]<span class="text-danger"></span>
                                <span class="text-danger"></span><span class="text-danger"></span><span class="text-danger"></span>
                            </label>
                            <div class="form-inline radio-has-son">
                                <label>
                                    <input type="radio" name="has_contact_tel" value="true" @@click="showTravelContactTel(true)"> @Localizer["common_have"]
                                </label><label>
                                    <input type="radio" name="has_contact_tel" value="false" @@click="showTravelContactTel(false)"> @Localizer["common_have_not"]
                                </label>
                            </div> <div class="form-group-son form-group must"></div>
                        </div>
                    </div>
                </div>
                <div class="row mb-3">
                    <div class="col-md-6 col-sm-6 col-xs-12" v-show="show_travel_contact_phone">
                        <!-- Tel Country Code & Phone Number -->
                        <div class="form-group">
                            <label>@Localizer["component_form_contact_tel_title"]<span class="text-danger">*</span></label>
                            <div class="input-group buyer-tel-country">
                                <v-select :options="country_areas" class="tel-country" :reduce="country => country.tel_area" label="tel_area"
                                            :get-option-label="getTelAreaLabel" v-model="booking.custom.find(c=>c.cus_type === 'contact').tel_country_code" placeholder="@Localizer["booking_step1_contact_country_placeholder"]">
                                    <template #option="option">
                                        <span>+{{option.tel_area}} {{ option.country_name }} </span>
                                    </template>
                                </v-select>
                                @*<select name="contact_tel_country_code" class="form-control" v-model="booking.custom.find(c=>c.cus_type === 'contact').tel_country_code" required>
                                    <option value="">@Localizer["booking_step1_contact_country_placeholder"]</option>
                                    <template v-for="tel in getBookingFieldReference('custom.tel_country_code')">
                                        <option :value="tel.code" v-html="`${tel.info} ${tel.code}`"></option>
                                    </template>
                                </select>*@
                                <input placeholder="@Localizer["component_form_contact_tel_placeholder"]" type="tel" class="form-control form-phone" name="contact_tel_number" v-model="booking.custom.find(c=>c.cus_type === 'contact').tel_number" autocomplete="off" required>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6 col-sm-6 col-xs-12" v-show="checkBookingField('custom.contact_app', 'contact')">
                        <!-- Have App? -->
                        <div class="form-group">
                            <label>@Localizer["booking_step1_contact_data_contact_app"]<span class="text-danger"></span><span class="text-danger"></span><span class="text-danger"></span><span class="text-danger"></span></label>
                            <div class="form-inline radio-has-son">
                                <label>
                                    <input type="radio" name="has_contact_app" value="true" @@click="showTravelContactApp(true)" required> @Localizer["common_have"]
                                </label>
                                <label>
                                    <input type="radio" name="has_contact_app" value="false" @@click="showTravelContactApp(false)" required> @Localizer["common_have_not"]
                                </label>
                            </div>
                            <div class="form-group-son form-group must"></div>
                        </div>
                    </div>
                </div>
                <div class="row" v-show="show_travel_contact_app">
                    <div class="col-md-6 col-sm-6 col-xs-12 form-group">
                        <!-- App Selection -->
                        <label>@Localizer["booking_step1_contact_data_contact_app_maybe"]<span class="text-danger">*</span></label>
                        <select id="booking-contact-app-type" class="form-control" name="appType0" v-model="booking.custom.find(c=>c.cus_type === 'contact').contact_app" required>
                            <option disabled="disabled" value="">@Localizer["booking_step1_contact_data_contact_app_placeholder"]</option>
                            <template v-for="app in getBookingFieldReference('custom.contact_app')">
                                <option :value="app.app_type" v-html="app.app_name" v-if="app.supported==true"></option>
                            </template>
                        </select>
                    </div>
                    <div class="col-md-6 col-sm-6 col-xs-12 form-group">
                        <!-- App Account -->
                        <label>@Localizer["booking_step1_contact_data_contact_app_account"]<span class="text-danger">*</span></label>
                        <input name="appAccount0" placeholder="@Localizer["common_text_field_set"]" autocomplete="on" type="text" id="booking-contact-app-account" class="form-control" v-model="booking.custom.find(c=>c.cus_type === 'contact').contact_app_account" required>
                    </div>
                </div>
            </template>

            <!-- Order Note -->
            <div class="traveler-con" style="margin-top: 20px;">
                <div class="sub-title">@Localizer["booking_step1_order_note"] </div>
                <div class="row mt-10">
                    <div class="col-md-8 col-sm-12">
                        <div class="form-group">
                            <textarea id="booking-note" v-model="booking.order_note" placeholder="@Localizer["booking_step1_order_note_placeholder"]" maxlength="900" rows="3" class="form-control"></textarea>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div>
            <input type="button" class="btn btn-primary" v-on:click="doBooking()" value="@Localizer["common_booking"]" />
        </div>
    </div>
    <hr />
    <div class="container mt-4">
        <div class="row">
            <div class="col-12">
                <h4>Your BookingModel</h4>
                <pre id="raw_booking"></pre>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">
    Array.prototype.containsAll = function () {
        return Array.from(arguments).every(i => this.includes(i));
    }

    Array.prototype.containsSome = function () {
        return Array.from(arguments).some(i => this.includes(i));
    }

    getValue = (o, p) => p.split('.').reduce((r, k) => r[k], o);

    Vue.component('v-select', VueSelect.VueSelect);

    let app = new Vue({
        el: '#App',
        data() {
            return {
                isLoading: false,
                prod_no: null,
                pkg_no: null,
                country_cities: [],
                country_areas: [],
                booking: { custom:[], traffic:[] },
                bookingField: {},
                show_travel_contact_app: false,
                show_travel_contact_phone: false,
                show_cus_route: false,
                show_cus_shuttle: false,
                booking_custom_routes: []
            }
        },
        created: function () {
            this.Query();
            this.show_travel_contact_app = this.checkBookingField('custom.contact_app', 'contact');
            this.show_travel_contact_phone = this.checkBookingField('custom.tel_number', 'contact');
        },
        methods: {
            Query() {
                if (this.isLoading) {
                    return;
                }

                // Load Country Code & Tel Country Code
                fetch(`${_root_path}Common/QueryCountryInfo/@locale`)
                    .then(response => {
                        if (response.ok) return response.json();
                        return response.text().then((text) => { throw Error(JSON.parse(text)) });
                    })
                    .then(data => {
                        // console.log(`countries => ${JSON.stringify(data)}`);
                        this.country_cities = data.countries;
                        this.country_areas = data.country_areas.sort((prev, next) => prev.tel_area > next.tel_area);

                        // select2 binding
                        //$('.select2').select2({
                        //    theme: "bootstrap-5",
                        //});
                    }).catch(error => {
                        alert(`Error: ${error.message}`)
                        console.log('Error', error.message);
                    });

                this.isLoading = true;
                setTimeout(() => {
                    this.Fetch();
                }, 100)
            },
            Fetch() {
                let req = localStorage.getItem("bookingReq");
                // localStorage.removeItem("bookingReq");
                //console.log(`Fetch Req => ${req}`);
                var reqObj = JSON.parse(req);
                this.prod_no = reqObj.prod_no;
                this.pkg_no = reqObj.pkg_no;
                let uri = `${_root_path}Booking/LoadData`;
                fetch(uri, {
                    method: 'POST',
                    headers: {
                        'Accept': 'application/json',
                        'Content-Type': 'application/json'
                    },
                    body: req,
                })
                    .then(response => {
                        if (response.ok) return response.json();
                        return response.text().then((text) => { throw Error(JSON.parse(text)) });
                    })
                    .then(result => {
                        console.log(`${JSON.stringify(result)}`);

                        this.booking = result.booking;
                        this.bookingField = result.bookingfield;

                        this.isLoading = false;
                    })
                    .catch(error => {
                        alert(`Error: ${error.message}`)
                        console.log('Error', error.message);
                    });

            },
            getCountryLabel: function (val) {
                if (typeof val === 'object') {
                    return `${val.country_name} ${val.country_code}`;
                } else {
                    let option = this.country_areas.filter(function (data) {
                        return data.country_code === val || data.country_name.indexOf(val) != -1;
                    })[0];
                    return `${option.country_name} ${option.country_code}`;
                }
            },
            getTelAreaLabel: function (val) {
                if (typeof val === 'object') {
                    return `+${val.tel_area}`;
                } else {
                    let option = this.country_areas.filter(function (data) {
                        return data.tel_area === val || data.country_name.indexOf(val) != -1;
                    })[0];
                    return `+${option.tel_area}`;
                }
            },
            checkBookingField(path, keys, mandatory) {
                try {
                    let key_array = keys.split(',').map(s => s.trim());
                    let using = getValue(this.bookingField, path + '.use'); 

                    let is_required = using ? using.filter(v => key_array.includes(v)).length : getValue(this.bookingField, path + '.is_require');
                    let result = is_required ? true : false;

                    console.log(`path: ${path}  ${JSON.stringify(key_array)} => using: ${JSON.stringify(using)} / matched=${using.filter(v => key_array.includes(v)).length}, is_required: ${is_required} => ${result}`);
                    return result;
                } catch (e) {
                    // console.log(`checkBookingField, path: ${path} => error : ${e}`);
                    return false;
                }
            },
            checkBookingFieldforFlight(path) {
                try {
                    //debugger;
                    let flight = this.bookingField?.traffics?.find(t => t.traffic_type?.traffic_type_value == 'flight');
                    let is_required = getValue(flight, path + '.is_require');
                    let result = is_required == "True" ? true : false;
                    return result;
                } catch (e) {
                    // console.log(`checkBookingFieldforFlight, path: ${path} => error : ${e}`);
                    return false;
                }
            },
            checkBookingFieldforRentCar(path, trafficTypeValue) {
                try {
                    //debugger;
                    let rentcar = (trafficTypeValue) ?
                        this.bookingField?.traffics?.find(t => t.traffic_type?.traffic_type_value == trafficTypeValue) :
                        this.bookingField?.traffics?.find(t => t.traffic_type?.traffic_type_value == 'rentcar_01' || t.traffic_type?.traffic_type_value == 'rentcar_02');

                    let result = false;
                    if (rentcar) {
                        let is_required = getValue(rentcar, path + '.is_require'); 
                        result = (is_required == "True") ? true : false;
                        if (path.indexOf('provide') == -1) {
                            result = (is_required == "True") ? true : false;
                        }
                    }
                    // console.log(`rentcar => ${path}, is_require: ${result}`);
                    return result;
                } catch (e) {
                    // console.log(`rentcar => ${path}, error : ${e}`);
                    return false;
                }
            },
            checkBookingFieldforPickUp(path) {
                try {
                    //debugger;
                    let flight = this.bookingField?.traffics?.find(t => t.traffic_type?.traffic_type_value == 'pickup_03' || t.traffic_type?.traffic_type_value == 'pickup_04');
                    if (flight == undefined) { return false; }

                    let is_revisible = getValue(flight, path + '.is_visible');
                    let is_required = getValue(flight, path + '.is_require');
                    if (path.indexOf('provide') == -1) {
                        var result = is_required == "True" ? true : false;
                        return result;
                    }
                    else {
                        var result = is_revisible == "True" ? true : false;
                        return result;
                    }
                    // console.log(`path: ${path}  ${JSON.stringify(key_array)} => using: ${JSON.stringify(using)}/matched=${using.filter(v => key_array.includes(v)).length}, is_required: ${is_required} => ${result}`);
                } catch (e) {
                    // console.log(`checkBookingFieldforPickUp, path: ${path} => error : ${e}`);
                    return false;
                }
            },
            getBookingFieldReference(path) {
                if (path.indexOf('glass') == -1) {
                    var ref = getValue(this.bookingField, path);
                    if (ref == null) {
                        return [];
                    }
                    else {
                        let refTemp = getValue(this.bookingField, path + '.list_option');
                        return refTemp;
                    }
                    // console.log(`getBookingFieldReference,  path => bookingfield.${path}.${key}, vale=>${JSON.stringify(ref)}`);
                }
                // for glass_degree
                else {
                    let refTemp = [];
                    let option = getValue(this.bookingField, path + '.list_option');
                    if (option) { 
                        let range = option[0].range.split('~'); 
                        let start = parseFloat(range[0]);
                        let end = parseFloat(range[1]);
                        let interval = parseFloat(option[0].interval); 
                        while (start < end) { 
                            refTemp.push({
                                code: start,
                                value: start
                            });
                            start += interval;
                        }
                    }
                    return refTemp;
                }
            },
            getBookingFieldReferenceforFlight(path) {
                let flight = this.bookingField?.traffics?.find(t => t.traffic_type?.traffic_type_value == 'flight');

                try {
                    if (flight != null) {
                        let refTemp = getValue(flight, path + '.list_option');
                        return refTemp;
                    }
                    else {
                        return [];
                    }
                }
                catch (e) { return []; }
            },
            getBookingFieldReferenceforRentCar(path, trafficTypeValue) {
                try {
                    let rentCar = (trafficTypeValue) ?
                        this.bookingField?.traffics?.find(t => t.traffic_type?.traffic_type_value == trafficTypeValue) : 
                        this.bookingField?.traffics?.find(t => t.traffic_type?.traffic_type_value != 'flight');
                        // this.bookingField?.traffics?.find(t => t.traffic_type?.traffic_type_value == 'rentcar_01' || t.traffic_type?.traffic_type_value == 'rentcar_02' || t.traffic_type?.traffic_type_value == 'rentcar_03' || t.traffic_type?.traffic_type_value == 'pickup_03' || t.traffic_type?.traffic_type_value == 'pickup_04' || t.traffic_type?.traffic_type_value == 'voucher');
                    
                    if (rentCar) {
                        let _type = rentCar.traffic_type.traffic_type_value;
                        let refTemp = getValue(rentCar, path + '.list_option');

                        if (path == 's_time' && _type == "pickup_04") {
                            if (refTemp.some(t => t.time_range)) return [];
                            refTemp.forEach(function (element) {
                                if (element.hour != 0) {
                                    element.hour = String(element.hour).padStart(2, '0');
                                    element.min = String(element.min).padStart(2, '0');
                                }
                            });
                        }
                        return refTemp;
                    }
                }
                catch (e) { }

                return [];
            },
            getBookingFieldReferenceTimeforRentCar(path) {
                try {
                    let rentCar = this.bookingField?.traffics?.find(t => t.traffic_type?.traffic_type_value === 'rentcar_01' || t.traffic_type?.traffic_type_value === 'rentcar_02');
                   
                    if (rentCar) {
                        let ref_path = (path === 'e_time') ? 'e_location' : 's_location';

                        let refData = getValue(rentCar, ref_path + '.list_option')[0];
                        let s_time = moment.utc(refData.s_time, 'HH:mm');
                        let interval = refData.interval;
                        let time_list = [];
     
                        while (s_time <= moment.utc(refData.e_time, 'HH:mm')) {
                            time_list.push({ id: s_time.format('HH:mm'), name: s_time.format('HH:mm') }); 
                            s_time = s_time.add(refData.interval, 'minute');
                        }
                        return time_list;
                    }
                }
                catch (e) { console.log(e); }

                return [];
            },
            getBookingFieldReferenceforVoucher(path) {
                let rendCar = this.bookingField?.traffics?.find(t => t.traffic_type?.traffic_type_value == 'voucher'); 

                try {
                    if (rendCar != null) {
                        let refTemp = getValue(rendCar, path + '.list_option');
                        return refTemp;
                    }
                    else {
                        return [];
                    }
                }
                catch (e) { return []; }
            },
            getPickupTime() {
                return this.bookingField?.traffics.find(t => t.traffic_type?.traffic_type_value=='pickup_04')?.s_time?.list_option ?
                            this.bookingField?.traffics.find(t => t.traffic_type?.traffic_type_value=='pickup_04')?.s_time?.list_option?.filter(t => !t.time_range) : []
            },
            getPickupCustomTime() {
                return this.bookingField?.traffics.find(t => t.traffic_type?.traffic_type_value=='pickup_04')?.s_time?.list_option ?
                            this.bookingField?.traffics.find(t => t.traffic_type?.traffic_type_value=='pickup_04')?.s_time?.list_option?.filter(t => t.time_range && t.time_range != '~') : []
            },
            getLocationWeekday(week) {
                const weekday = [];
                weekday[0] = "Mon"; // Monday
                weekday[1] = "Tue"; // Tuesday
                weekday[2] = "Wed"; // Wednesday
                weekday[3] = "Thu"; // Thursday
                weekday[4] = "Fri"; // Friday
                weekday[5] = "Sat"; // Saturday
                weekday[6] = "Sun"; // Sunday

                let idx = week.replace(/,/g, '').indexOf('Y');
                return idx != -1 ? weekday[idx] : '';
            },
            changeShuttleTime(val) { 
                this.show_cus_shuttle = val === 'customize';

                if (this.show_cus_shuttle) {
                    let option = this.bookingField.traffics.find(t => t.traffic_type?.traffic_type_value == 'pickup_04')?.s_time?.list_option[0];
                    let ranges = option.time_range.split('~');
                    let start_time = moment.utc(ranges[0], 'HH:mm');
                    let end_time = moment.utc(ranges[1], 'HH:mm');

                    $('#selShuttleCusHour :not(:first-child)').remove();
                    while (start_time <= end_time) {
                        $('#selShuttleCusHour').append($('<option>', {
                            value: start_time.format('HH'),
                            text: start_time.format('HH')
                        }));
                        start_time = start_time.add(1, 'hour');
                    }
                    $('#selShuttleCusMinute :not(:first-child)').remove();
                }
                else {
                    // this.booking.traffic.find(t => t.traffic_type == 'pickup_04').s_time = val;
                    this.$set(this.booking.traffic.find(t => t.traffic_type == 'pickup_04'), "s_time", val);
                }
            },
            changeShuttleHour() {
                let hour = $('#selShuttleCusHour').val();
                let option = this.bookingField.traffics.find(t => t.traffic_type?.traffic_type_value == 'pickup_04')?.s_time?.list_option[0];
                let ranges = option.time_range.split('~');
                let end_time = moment.utc(ranges[1], 'HH:mm');
                let begin_time = moment.utc(`${hour}:00`, 'HH:mm');
                let max_minute = 59;

                if (begin_time.format("HH") == end_time.format("HH")) {
                    max_minute = end_time.diff(begin_time, 'minutes');
                }
                
                $('#selShuttleCusMinute :not(:first-child)').remove();
                for (let tm = 0; tm <= max_minute; tm++) {
                    $('#selShuttleCusMinute').append($('<option>', {
                        value: tm.toString().padStart(2, '0'),
                        text: tm.toString().padStart(2, '0')
                    }));
                }
            },
            changeShuttleMinute() { 
                // this.booking.traffic.find(t => t.traffic_type == 'pickup_04').s_time = `${$('#selShuttleCusHour').val()}:${$('#selShuttleCusMinute').val()}`;
                this.$set(this.booking.traffic.find(t => t.traffic_type == 'pickup_04'), "s_time", `${$('#selShuttleCusHour').val()}:${$('#selShuttleCusMinute').val()}`);
            },
            refreshShoeSize(idx) {
                $(`#shoeSizeValue_${idx} option:not(:first)`).remove();
                let shoe_type = $(`#shoeSizeType_${idx}`).val();
                let shoe_unit = $(`#shoeSizeUnit_${idx}`).val();
                //@* console.log(`idx => ${idx}, type=${shoe_type}, unit=${shoe_unit}`) *@

                let sel_unit = null;

                if (shoe_type == "M") sel_unit = this.bookingField.custom.shoe.list_option.find(t => t.man).man;
                else if (shoe_type == "W") sel_unit = this.bookingField.custom.shoe.list_option.find(t => t.woman).woman;
                else if (shoe_type == "C") sel_unit = this.bookingField.custom.shoe.list_option.find(t => t.child).child;
                // console.log(` shoe list => ${JSON.stringify(sel_unit)}`)

                sel_unit = sel_unit ? sel_unit.find(u => u.unit_code === shoe_unit) : undefined;
                // console.log(` sel size unit => ${JSON.stringify(sel_unit)}`)

                $(`#shoeSizeValue_${idx} :not(:first-child)`).remove();
                if (sel_unit) {
                    let start = parseFloat(sel_unit.size_range_start);
                    let end = parseFloat(sel_unit.size_range_end);
                    let interval = parseFloat(sel_unit.interval);
                    while (start < end) {
                        $(`#shoeSizeValue_${idx}`).append($('<option>', {
                            value: start,
                            text: start.toString()
                        }));
                        start += interval;
                    }
                }
            },
            setArrivalVisa(chk) {
                if (chk == "1") {
                    this.booking.traffic.find(t => t.traffic_type == 'flight').arrival_visa = true;
                }
                else {
                    this.booking.traffic.find(t => t.traffic_type == 'flight').arrival_visa = false;
                }
            },
            setWifi(chk) {
                if (chk == "1") {
                    this.booking.traffic.find(t => t.traffic_type.startsWith('rentcar')).provide_wifi = true;
                }
                else {
                    this.booking.traffic.find(t => t.traffic_type.startsWith('rentcar')).provide_wifi = false;
                }
            },
            setGps(chk) {
                if (chk == "1") {
                    this.booking.traffic.find(t => t.traffic_type.startsWith('rentcar')).provide_gps = true;
                }
                else {
                    this.booking.traffic.find(t => t.traffic_type.startsWith('rentcar')).provide_gps = false;
                }
            },
            setCountry(target, val) {
                //@* console.log(` target = ${target}, val => ${val}`); *@
                let cities = [];
                if (this.bookingField.custom.country_cities.list_option) {
                    let country = this.bookingField.custom.country_cities.list_option.find(n => n.id == val);
                    cities = country ? country.cities : [];
                }
                //@* console.log(`cities => ${JSON.stringify(cities)}`); *@
                $(target).find('option:not(:first)').remove();
                cities.forEach(c => {
                    $(target).append($('<option>', {
                        value: c.cityCode,
                        text: c.name
                    }));
                });

            },
             changeRentLocation(val, type) {
                 if (type === 'pick') {
                     $('#booking_pickup_time').find(`option:not(:first)`).remove();
                     $('#booking_dropoff_time').find(`option:not(:first)`).remove();

                     if (val == "") return false;
                     let _location = this.bookingField?.traffics?.find(t => t.traffic_type.traffic_type_value.startsWith('rentcar_01') || t.traffic_type.traffic_type_value.startsWith('rentcar_02'))?.s_location?.list_option.find(o => o.id === val);
                     if (_location != undefined) {
                         let start_time = moment.utc(_location.s_time, 'HH:mm');
                         let end_time = moment.utc(_location.e_time, 'HH:mm');
                         while (start_time <= end_time) {
                             $('#booking_pickup_time').append($('<option>', {
                                 value: start_time.format('HH:mm'),
                                 text: start_time.format('HH:mm')
                             }));
                             start_time = start_time.add(_location.interval, 'minute');
                         }
                         start_time = moment.utc(_location.s_time, 'HH:mm');
                         end_time = moment.utc(_location.e_time, 'HH:mm');
                         while (start_time <= end_time) {
                             $('#booking_dropoff_time').append($('<option>', {
                                 value: start_time.format('HH:mm'),
                                 text: start_time.format('HH:mm')
                             }));
                             start_time = start_time.add(_location.interval, 'minute');
                         }
                     }

                     var temp = this.booking?.traffic?.find(t => t.traffic_type?.startsWith('rentcar_01') || t.traffic_type?.startsWith('rentcar_02'));
                     if (temp != undefined) { temp.e_location = val; }
                 }
                 if (type === 'drop') {
                     $('#booking_dropoff_time').find(`option:not(:first)`).remove();

                     if (val == "") return false;
                     let _location = this.bookingField.traffics.find(t => t.traffic_type.traffic_type_value.startsWith('rentcar_01') || t.traffic_type.traffic_type_value.startsWith('rentcar_02'))?.e_location.list_option.find(o => o.id === val);
                     let start_time = moment.utc(_location.s_time, 'HH:mm');
                     let end_time = moment.utc(_location.e_time, 'HH:mm');
                     while (start_time <= end_time) {
                         $('#booking_dropoff_time').append($('<option>', {
                             value: start_time.format('HH:mm'),
                             text: start_time.format('HH:mm')
                         }));
                         start_time = start_time.add(_location.interval, 'minute');
                     }
                 }
            },
            changeShuttleRoute(val) {
                this.show_cus_route = (val === 'customize');
                let rentcar03 = this.booking.traffic.find(t => t.traffic_type.startsWith('rentcar_03'));

                // rentcar03.is_rent_customize = this.show_cus_route ? true : false;
                // rentcar03.s_location = val;
                this.$set(rentcar03, "is_rent_customize", this.show_cus_route ? true : false);
                this.$set(rentcar03, "s_location", val);
            },
            addCusRoute() {
                this.booking_custom_routes.push($('#booking-shuttle-custom-route').val());
                $('#booking-shuttle-custom-route').val('');
                if (this.booking_custom_routes.length >= 2) {
                    $('#booking-shuttle-custom-route').attr('disabled', true);
                    $('.btn-next').attr('disabled', true);
                }
                // this.booking.traffic.find(t => t.traffic_type == 'rentcar_03').s_address = this.booking_custom_routes.join(',');
                 this.$set(this.booking.traffic.find(t => t.traffic_type == 'rentcar_03'), "s_address", this.booking_custom_routes.join(','));
            },
            removeCusRoute(idx) {
                this.booking_custom_routes.splice(idx, 1);
                if (this.booking_custom_routes.length < 2) {
                    $('#booking-shuttle-custom-route').attr('disabled', false);
                    $('.btn-next').attr('disabled', false);
                }
                // this.booking.traffic.find(t => t.traffic_type.startsWith('rentcar')).s_address = this.booking_custom_routes.join(',');
                this.$set(this.booking.traffic.find(t => t.traffic_typestartsWith('rentcar')), "s_address", this.booking_custom_routes.join(','));
            },
            showTravelContactTel(flag) {
                this.show_travel_contact_phone = flag;
                let cus = this.booking.custom.find(c => c.cus_type === 'contact');
                if (!flag) {
                    cus.tel_country_code = "";
                    cus.tel_number = "";
                }
                console.log(`Contact => ${JSON.stringify(cus)}`)
            },
            showTravelContactApp(flag) {
                this.show_travel_contact_app = flag;
                let cus = this.booking.custom.find(c => c.cus_type === 'contact');
                cus.has_app = flag;
                if (!flag) { 
                    cus.contact_app = "";
                    cus.contact_app_account = "";
                }
                console.log(`Contact => ${JSON.stringify(cus)}`) 
            },
            doBooking() {
                var receiverCountry = $("#receiverCountry").val();
                var receiverCity = $("#receiverCity").val();
                if (receiverCountry != undefined && receiverCity != undefined) {
                    this.booking.custom.find(t=>t.cus_type === 'send').country_cities = receiverCountry + "_" + receiverCity;
                }

                if (this.show_travel_contact_phone == false && this.booking.custom.find(c=>c.cus_type === 'contact') != null) {
                    this.booking.custom.find(c=>c.cus_type === 'contact').tel_number = "";
                    this.booking.custom.find(c=>c.cus_type === 'contact').tel_country_code = "";

                }
                if (this.show_travel_contact_app == false && this.booking.custom.find(c=>c.cus_type === 'contact') != null) {
                    this.booking.custom.find(c=>c.cus_type === 'contact').contact_app = "";
                    this.booking.custom.find(c=>c.cus_type === 'contact').contact_app_account = "";
                }

                console.log(`${JSON.stringify(this.booking)}`);
                let uri = `${_root_path}Booking/Booking`;
                fetch(uri, {
                    method: 'POST',
                    headers: {
                        'Accept': 'application/json',
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(this.booking)
                })
                    .then(response => {
                        // console.log(response.status);
                        return response.json();
                    })
                    .then(result => {
                        console.log(`${JSON.stringify(result)}`);
                        alert(result.result);
                    })
                    .catch(error => { console.error('Unable to search.', error); this.isLoading = false });

            },
            checkTwResident(pax) {
                // Ensure the bookingfield has "nationality"
                const need_na = this.checkBookingField('custom.nationality', 'cus_01,cus_02');
                if (!need_na) return false;

                // Check the nationality must be Taiwnaese
                return (pax.nationality === 'TW') ? true : false;
            },
        },
        watch: {
            booking: {
                handler(newVal, oldVal) {
                    console.log(`bookingmodel been changed!`);
                    document.getElementById("raw_booking").textContent = JSON.stringify(newVal, undefined, 2);
                },
                deep: true
            },
        },
        computed: {
           
        }
    });

    Vue.component('datepicker', {
        template: `<input type="text" class="form-control datepicker" ref="input" v-bind:value="value" v-on:input="updateValue($event.target.value)" />`,
        props: {
            value: {
                type: String,
            //    default: moment().format('YYYY-MM-DD')
            }
        },
        mounted: function () {
            let self = this;
            this.$nextTick(function () {
                $(this.$el).datepicker({
                    language: '@locale',
                    todayHighlight: true,
                    todayBtn: "linked",
                    autoclose: true,
                    format: "yyyy-mm-dd"
                })
                    .on('changeDate', function (e) {
                        var date = e.format('yyyy-mm-dd');
                        self.updateValue(date);
                    });
            });
        },
        methods: {
            updateValue: function (value) {
                this.$emit('input', value);
            },
        }
    });
</script>